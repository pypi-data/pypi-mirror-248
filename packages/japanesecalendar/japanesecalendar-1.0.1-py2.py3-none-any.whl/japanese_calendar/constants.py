# -*- coding: utf-8 -*-
# this file is generated by chinese_calendar.scripts.generate_constants
from __future__ import absolute_import, unicode_literals

import datetime
from enum import Enum


class Holiday(Enum):
    def __new__(cls, english, chinese, days=0):
        obj = object.__new__(cls)
        obj._value_ = english

        obj.chinese = chinese
        obj.days = days
        return obj

    new_years_day = "New Year's Day", "元旦", 1
    coming_of_age_day = "Coming of Age Day","成人节",1
    beginning_of_spring_day = "Beginning of Spring Day","春分节",1
    national_foundation_day = "National Foundation Day","建国日",1
    emperor_birthday = "Emperor Birthday","天皇诞辰",1
    showa_day = "Showa Day","昭和之日",1
    constitution_day = "Constitution Day","宪法纪念日",1
    greenery_day = "Greenery Day","绿之日",1
    children_day = "Children Day",1
    ocean_day = "Ocean Day",1
    mountain_day = "Mountain Day",1
    respect_for_aged_day = "Respect for Aged Day",1
    autumn_equinox_day = "Autumn Equinox Day",1
    health_and_sports_day = "Health and Sports Day",1
    culture_day = "Culture Day",1
    labor_thanksgiving_day = "Labor Thanksgiving Day",1


holidays = {
    datetime.date(year=2023, month=1, day=1): Holiday.new_years_day.value,
    datetime.date(year=2023, month=1, day=2): Holiday.new_years_day.value,
    datetime.date(year=2023, month=1, day=9): Holiday.coming_of_age_day.value,
    datetime.date(year=2023, month=2, day=11): Holiday.national_foundation_day.value,
    datetime.date(year=2023, month=2, day=23): Holiday.emperor_birthday.value,
    datetime.date(year=2023, month=3, day=21): Holiday.beginning_of_spring_day.value,
    datetime.date(year=2023, month=4, day=29): Holiday.showa_day.value,
    datetime.date(year=2023, month=5, day=3): Holiday.constitution_day.value,
    datetime.date(year=2023, month=5, day=4): Holiday.greenery_day.value,
    datetime.date(year=2023, month=5, day=5): Holiday.children_day.value,
    datetime.date(year=2023, month=7, day=17): Holiday.ocean_day.value,
    datetime.date(year=2023, month=8, day=11): Holiday.mountain_day.value,
    datetime.date(year=2023, month=9, day=18): Holiday.respect_for_aged_day.value,
    datetime.date(year=2023, month=9, day=23): Holiday.autumn_equinox_day.value,
    datetime.date(year=2023, month=10, day=9): Holiday.health_and_sports_day.value,
    datetime.date(year=2023, month=11, day=3): Holiday.culture_day.value,
    datetime.date(year=2023, month=11, day=23): Holiday.labor_thanksgiving_day.value,
    datetime.date(year=2024, month=1, day=1): Holiday.new_years_day.value,
    datetime.date(year=2024, month=1, day=8): Holiday.coming_of_age_day.value,
    datetime.date(year=2023, month=2, day=11): Holiday.national_foundation_day.value,
    datetime.date(year=2023, month=2, day=12): Holiday.national_foundation_day.value,
    datetime.date(year=2024, month=2, day=23): Holiday.emperor_birthday.value,
    datetime.date(year=2024, month=3, day=20): Holiday.beginning_of_spring_day.value,
    datetime.date(year=2023, month=4, day=29): Holiday.showa_day.value,
    datetime.date(year=2024, month=5, day=3): Holiday.constitution_day.value,
    datetime.date(year=2024, month=5, day=4): Holiday.greenery_day.value,
    datetime.date(year=2024, month=5, day=5): Holiday.children_day.value,
    datetime.date(year=2024, month=5, day=6): Holiday.children_day.value,
    datetime.date(year=2024, month=7, day=15): Holiday.ocean_day.value,
    datetime.date(year=2024, month=8, day=11): Holiday.mountain_day.value,
    datetime.date(year=2024, month=8, day=12): Holiday.mountain_day.value,
    datetime.date(year=2024, month=9, day=16): Holiday.respect_for_aged_day.value,
    datetime.date(year=2024, month=9, day=22): Holiday.autumn_equinox_day.value,
    datetime.date(year=2024, month=9, day=23): Holiday.autumn_equinox_day.value,
    datetime.date(year=2024, month=10, day=14): Holiday.health_and_sports_day.value,
    datetime.date(year=2024, month=11, day=3): Holiday.culture_day.value,
    datetime.date(year=2024, month=11, day=4): Holiday.culture_day.value,
    datetime.date(year=2024, month=11, day=23): Holiday.labor_thanksgiving_day.value,
}

workdays = {

}

in_lieu_days = {}

