import{isEmpty,waitFor,humanSize,humanDuration,titleCase}from"../../base/helpers.mjs";import{ElementBuilder}from"../../base/builder.mjs";import{Controller}from"../base.mjs";import{View,ParentView}from"../../view/base.mjs";import{TableView}from"../../view/table.mjs";import{FormView}from"../../forms/base.mjs";import{ButtonInputView,StringInputView}from"../../forms/input.mjs";const E=new ElementBuilder;class AcknowledgeButtonInputView extends ButtonInputView{static className="download-input-view";static defaultValue="I Acknowledge"}class InitializationAnnouncementView extends View{constructor(e,t){super(e),this.directories=t,this.formView=new FormView(e);for(let e in this.directories)this.formView.addInput("Directories",StringInputView,e,titleCase(e),{required:!0,value:this.directories[e]})}async build(){let e=await super.build();return e.append(E.h2().content("Welcome to Enfugue")),e.append(E.p().content("Thank you for downloading Enfugue! I hope you enjoy it. Please read the following brief disclaimers before you begin.")),e.append(E.h3().content("Your Privacy")),e.append(E.p().content("Enfugue does not track usage in any way. Your images, prompts, configurations, and all other details only exist on your computer and are never sent elsewhere over a network or otherwise, unless specifically requested by the user.")),e.append(E.p().content(E.span().content("Some resources, such as public model data, is provided by "),E.a().content("Hugging Face").href("https://huggingface.co/").target("_blank"),E.span().content(" and by using this application Enfugue will reach out to their servers to download resources as needed. By doing so, you agree to their "),E.a().content("Privacy Policy").href("https://huggingface.co/privacy").target("_blank"),E.span().content("."))),e.append(E.p().content("Additional resources may be downloaded from other providers at your request. Please review the privacy policy and terms of service of the resource providers stated when these resources are requested.")),e.append(E.h3().content("Terms of Service")),e.append(E.p().content("Enfugue makes no guarantees of this software's functionality, and by continuing you release Enfugue, Benjamin Paine, GitHub, Hugging Face, Stability AI, Runway, CivitAI, and all other parties whose software contributions are employed within Enfugue from any liability of any kind arising from use of the software, including but not limited to wear and tear on your hardware and expenses incurred by consuming bandwidth.")),e.append(E.p().content("Furthermore, you hold all the above parties blameless from any and all liability, damage, loss, and expense (including without limitation reasonable attorneyâ€™s fees and court costs) arising from claims against parties that Enfugue, or your use of the same as permitted by this Agreement, infringe the intellectual property rights of a third party.")),e.append(E.p().class("strong").content("Enfugue is and always will be free and open-source software.")),e.append(E.p().content("To support further development, please consider financially supporting it if you are able. Simply click 'About' under 'Help' above to see ways you can help keep Enfugue improving.")),e.append(E.h2().content("Directories")),e.append(E.p().content("Use these fields to specify the directories to use for your installation. These do not need to be solely used by Enfugue, and Enfugue will never delete anything from these directories unless you specifically request.")),e.append(await this.formView.getNode()),e}}class DownloadAnnouncementHeaderView extends View{async build(){let e=await super.build();return e.content(E.h2().content("Downloads"),E.p().content("The following downloads are required by Enfugue to function. They are the base Stable Diffusion models, from which more fine-tuned models are made. These models are used when you are not using any other models, as well as when calculating derived models."),E.p().content("Click the icon in each row to being downloading them. If you do not download them now, they will be downloaded the first time they are needed.")),e}}class OptionalDownloadAnnouncementHeaderView extends View{async build(){let e=await super.build();return e.content(E.h2().content("Optional Downloads"),E.p().content("The following downloads are optional. They are newer, more powerful versions of Stable Diffusion that can be used in Enfugue."),E.p().content("For Stable Diffusion XL, you will require a GPU with at least 8 GB of VRAM. If you have between 8 GB and 12 GB of VRAM, it is recommended to enable 'Sequential Model Loading' in the settings menu for best performance with SDXL."),E.p().content("Click the icon in each row to being downloading them. You can also select the appropriate checkpoint from the checkpoint picker at any time, and the file will be downloaded if it has not yet been.")),e}}class DownloadTableView extends TableView{static canSort=!1;static columns={model:"Model",size:"Size"};static columnFormatters={size:e=>humanSize(e)}}class UpdateAnnouncementHeaderView extends View{static releasesLink="https://github.com/painebenjamin/app.enfugue.ai/releases/";async build(){let e=await super.build();return e.content(E.h2().content("Updates"),E.p().content("An updated version of Enfugue is available. See below for details regarding new features and fixes."),E.p().content(E.span().content("If you are managing your own installation, simply executing "),E.createElement("code").content("pip install enfugue --update"),E.span().content(" will fetch the latest details. If you are using an easy installation, you will need to download the updated package. See below for any additional steps required.")),E.p().class("center").content(E.a().class("button").href(this.constructor.releasesLink).target("_blank").content("Download Now"))),e}}class UpdateAnnouncementView extends View{constructor(e,t){super(e),this.update=t}async build(){let e=await super.build();return e.content(E.h3().content(`Version ${this.update.version}`),E.p().addClass("note").content(`Released ${this.update.release}`),E.p().content(this.update.description)),e}}class AnnouncementsController extends Controller{static announcementsWindowWidth=800;static announcementsWindowHeight=1e3;async checkShowAnnouncements(){let e=await this.model.get("/announcements");if(!isEmpty(e)){let t,n=e.filter((e=>"initialize"===e.type)),o=e.filter((e=>"download"===e.type)),i=e.filter((e=>"optional-download"===e.type)),a=e.filter((e=>"update"===e.type)),s=new ParentView(this.config);if(await s.addClass("announcements-view"),!isEmpty(n)){let e=(await s.addChild(InitializationAnnouncementView,n[0].directories)).formView;e.onChange((()=>{t.disable(),e.setError("You must submit directory changes before continuing.")})),e.onSubmit((async n=>{try{await this.model.post("installation",null,null,{directories:n})}catch(t){if(isEmpty(t.status)||400!=t.status)throw t;{let o=-1!==`${t.detail}`.indexOf(",")?"them":"it";if(!await this.application.yesNo(`${t.detail}<br/><br/>Create ${o}?`))return e.setError(t),void e.enable();await this.model.post("installation",null,null,{directories:n,create:!0})}}this.notify("info","Success","Directories successfully set."),e.clearError(),e.enable(),t.enable()}))}if(!isEmpty(o)){await s.addChild(DownloadAnnouncementHeaderView);let e=await s.addChild(DownloadTableView,o);e.addButton("Download","fa-solid fa-download",(async t=>{let n=(await e.getNode()).find("tbody").findAll("tr");for(let e of n)e.find("td").getText()==t.model&&e.find("button").disabled(!0).addClass("disabled");this.download("checkpoint",t.url,t.model)}))}if(!isEmpty(i)){await s.addChild(OptionalDownloadAnnouncementHeaderView);let e=await s.addChild(DownloadTableView,i);e.addButton("Download","fa-solid fa-download",(async t=>{let n=(await e.getNode()).find("tbody").findAll("tr");for(let e of n)e.find("td").getText()==t.model&&e.find("button").disabled(!0).addClass("disabled");this.download("checkpoint",t.url,t.model)}))}if(!isEmpty(a)){await s.addChild(UpdateAnnouncementHeaderView);for(let e of a)await s.addChild(UpdateAnnouncementView,e)}if(!s.isEmpty()){t=await s.addChild(AcknowledgeButtonInputView);let e=await this.spawnWindow("Announcements",s,this.constructor.announcementsWindowWidth,this.constructor.announcementsWindowHeight);if(t.onChange((()=>{e.remove()})),e.onClose((async()=>{await this.model.post("/announcements/snooze")})),!isEmpty(n)){let t=(await e.getNode()).findAll("enfugue-node-button");for(let e of t)e.hide()}}}}async initialize(){this.checkShowAnnouncements(),setInterval((()=>this.checkShowAnnouncements()),864e5)}}export{AnnouncementsController};
