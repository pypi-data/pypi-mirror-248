import{isEmpty,camelCase,merge,sleep}from"../base/helpers.mjs";import{View}from"../view/base.mjs";import{FormView}from"../forms/base.mjs";import{InputView,ListInputView}from"../forms/input.mjs";import{ElementBuilder}from"../base/builder.mjs";import{Point,Drawable}from"../graphics/geometry.mjs";const E=new ElementBuilder({nodeContainer:"enfugue-node-container",nodeContents:"enfugue-node-contents",nodeHeader:"enfugue-node-header",nodeName:"enfugue-node-name",nodeButton:"enfugue-node-button",nodeOptionsContents:"enfugue-node-options-contents",nodeOptionsInputsOutputs:"enfugue-node-options-inputs-outputs",nodeOptions:"enfugue-node-options",nodeInputs:"enfugue-node-inputs",inputModes:"enfugue-node-input-modes",nodeOutputs:"enfugue-node-outputs",nodeInput:"enfugue-node-input",nodeInputGroup:"enfugue-node-input-group",nodeOutput:"enfugue-node-output",nodeOutputGroup:"enfugue-node-output-group"});class NodeCursorMode{static NONE=0;static MOVE=1;static RESIZE_N=2;static RESIZE_NE=3;static RESIZE_E=4;static RESIZE_SE=5;static RESIZE_S=6;static RESIZE_SW=7;static RESIZE_W=8;static RESIZE_NW=9}class NodeView extends View{static tagName="enfugue-node";static edgeHandlerTolerance=10;static canClose=!0;static canResizeX=!0;static canResizeY=!0;static canMove=!0;static canRename=!0;static canCopy=!0;static canFlipHeader=!1;static minWidth=150;static minHeight=100;static headerHeight=30;static snapSize=10;static padding=10;static defaultCursor="default";static fixedHeight=!1;static hideHeader=!1;static nodeButtons={};static copyText="Copy";static closeText="Close";static headerBottomText="Flip Header to Bottom";static headerTopText="Flip Header to Top";static headerBottomIcon="fa-solid fa-arrow-turn-down";static headerTopIcon="fa-solid fa-arrow-turn-up";constructor(t,e,s,o,i,r,n){super(t.config),this.editor=t,this.name=isEmpty(e)?this.constructor.name:e,this.content=s,this.left=isEmpty(o)?0:o,this.top=isEmpty(i)?0:i,this.left-=this.constructor.padding,this.top-=this.constructor.padding,this.width=isEmpty(r)?this.constructor.minWidth:r,this.width+=2*this.constructor.padding,this.height=isEmpty(n)?this.constructor.minHeight:n,this.height+=2*this.constructor.padding,this.setDimension(this.left,this.top,this.width,this.height,!0,!1),this.removed=!1,this.fixed=!1,this.canMerge=this.constructor.canMerge,this.closeCallbacks=[],this.resizeCallbacks=[],this.nameChangeCallbacks=[]}async getContent(){let t=this.content;return t instanceof View?await t.getNode():t}async setContent(t){return this.content=t,void 0!==this.node&&this.node.find(E.getCustomTag("nodeContents")).content(await this.getContent()),this}onClose(t){this.closeCallbacks.push(t)}async closed(){for(let t of this.closeCallbacks)await t()}onResize(t){this.resizeCallbacks.push(t)}async resized(){this.content instanceof View&&this.content.resize();for(let t of this.resizeCallbacks)await t()}get drawable(){return new Drawable([new Point(this.visibleLeft,this.visibleTop),new Point(this.visibleLeft+this.visibleWidth,this.visibleTop),new Point(this.visibleLeft+this.visibleWidth,this.visibleTop+this.visibleHeight),new Point(this.visibleLeft,this.visibleTop+this.visibleHeight)])}get x(){return this.left+this.constructor.padding}get y(){return this.top+this.constructor.padding}get w(){return this.width-2*this.constructor.padding}get h(){return this.height-2*this.constructor.padding}getState(){return{name:this.getName(),classname:this.constructor.name,x:this.x,y:this.y,w:this.w,h:this.h}}async setState(t){return this.name=t.name,this.setDimension(t.x-this.constructor.padding,t.y-this.constructor.padding,t.w+2*this.constructor.padding,t.h+2*this.constructor.padding,!0,!1),void 0!==this.node&&this.node.find(E.getCustomTag("nodeName")).content(this.name),this}setName(t,e=!0,s=!0){if(this.name=t,e&&void 0!==this.node&&this.node.find(E.getCustomTag("nodeName")).content(t),s)for(let e of this.nameChangeCallbacks)e(t)}onNameChange(t){this.nameChangeCallbacks.push(t)}getName(){return void 0===this.node?this.name:this.node.find(E.getCustomTag("nodeName")).getText()}remove(t=!0){this.removed=!0,this.editor.removeNode(this),t&&this.closed()}focus(){this.editor.focusNode(this)}static getNearestSnap(t,e,s){return isEmpty(e)&&(e=-this.padding),isEmpty(s)&&(s=1/0),Math.min(Math.max(Math.round(t/this.snapSize)*this.snapSize,e),s)}getLeftSnap(t){return this.constructor.getNearestSnap(t,-this.constructor.padding,this.editor.width+this.constructor.padding-this.width)}getTopSnap(t){return this.constructor.getNearestSnap(t,-this.constructor.padding,this.editor.height+this.constructor.padding-this.height)}getWidthSnap(t,e){return this.constructor.getNearestSnap(t,this.constructor.minWidth+2*this.constructor.padding,this.editor.width+this.constructor.padding-e)}getHeightSnap(t,e){return this.constructor.getNearestSnap(t,this.constructor.minHeight+2*this.constructor.padding,this.editor.height+this.constructor.padding-e)}resetDimension(){return this.setDimension(this.left,this.top,this.width,this.height,!0)}setDimension(t,e,s,o,i,r=!0){if(t=this.constructor.getNearestSnap(t),e=this.constructor.getNearestSnap(e),s=this.getWidthSnap(s,t),e+(o=this.getHeightSnap(o,e))>this.editor.height+this.constructor.padding){(e+=this.editor.height-e-o-this.constructor.padding)<0&&(o+=e,e=0)}if(t+s>this.editor.width+this.constructor.padding){(t+=this.editor.width-t-s-this.constructor.padding)<0&&(s+=t,t=0)}return void 0!==this.node&&this.node.css({left:`${t}px`,top:`${e}px`,width:`${s}px`,height:`${o}px`}),i&&(this.left=t,this.top=e,this.width=s,this.height=o),this.visibleLeft=t,this.visibleTop=e,this.visibleWidth=s,this.visibleHeight=o,r&&(i?this.editor.nodePlaced(this):this.editor.nodeMoved(this)),[t,e,s,o]}flipHeader(){!0===this.flipped?(this.flipped=!1,this.removeClass("flipped"),this.buttons.flip.tooltip=this.constructor.headerBottomText,this.buttons.flip.icon=this.constructor.headerBottomIcon):(this.flipped=!0,this.addClass("flipped"),this.buttons.flip.tooltip=this.constructor.headerTopText,this.buttons.flip.icon=this.constructor.headerTopIcon),this.rebuildHeaderButtons()}buildHeaderButtons(t,e){for(let s in e){let o=e[s];if(!0===o.disabled)continue;let i=E.nodeButton().class(`node-button-${camelCase(s)}`).content(E.i().class(o.icon)).on("click",(t=>{o.callback.call(o.context||this,t)}));o.tooltip&&i.data("tooltip",o.tooltip),t.append(i)}}getButtons(){return isEmpty(this.buttons)?this.constructor.buttons:this.buttons}rebuildHeaderButtons(){void 0!==this.node&&this.lock.acquire().then((t=>{let e=this.node.find(E.getCustomTag("nodeHeader"));for(let t of e.children())if(t.tagName==E.getCustomTag("nodeButton"))try{e.remove(t)}catch(t){}this.buildHeaderButtons(e,this.buttons),e.render(),t()}))}async build(){let t,e,s=await super.build(),o=E.nodeContainer(),i=NodeCursorMode.NONE,r=NodeCursorMode.NONE,n=E.nodeName().content(this.name),d=E.nodeHeader().content(n).css({height:`${this.constructor.headerHeight}px`,"line-height":`${this.constructor.headerHeight}px`});this.constructor.canRename&&(n.editable().on("input",(()=>{this.setName(n.getText(),!1)})),d.on("dblclick",(t=>{t.preventDefault(),t.stopPropagation(),n.focus()}))),this.constructor.hideHeader&&s.addClass("hide-header");let c={};for(let t in this.constructor.nodeButtons)c[t]={...this.constructor.nodeButtons[t]},c[t].context=this;this.constructor.canCopy&&(c.copy={icon:"fa-solid fa-copy",tooltip:this.constructor.copyText,shortcut:"p",context:this,callback:()=>{this.editor.copyNode(this)}}),this.constructor.canFlipHeader&&(c.flip={shortcut:"b",icon:this.constructor.headerBottomIcon,tooltip:this.constructor.headerBottomText,context:this,callback:()=>{this.flipHeader()}}),this.constructor.canClose&&(c.close={shortcut:"v",icon:"fa-solid fa-window-close",tooltip:this.constructor.closeText,context:this,callback:()=>{this.closed(),this.editor.removeNode(this)}}),this.buildHeaderButtons(d,c),this.buttons=c;let a=(s,o)=>{s.preventDefault(),s.stopPropagation();let r=!1,n=this.left,d=this.top,c=this.width,a=this.height,[h,u]=[0,0];switch(isEmpty(t)||isEmpty(e)||([h,u]=[s.clientX-t,s.clientY-e],h*=1/this.editor.zoom,u*=1/this.editor.zoom),i){case NodeCursorMode.MOVE:n+=h,d+=u,r=!0;break;case NodeCursorMode.RESIZE_N:d+=u,a-=u,r=!0;break;case NodeCursorMode.RESIZE_NE:d+=u,a-=u,c+=h,r=!0;break;case NodeCursorMode.RESIZE_E:c+=h,r=!0;break;case NodeCursorMode.RESIZE_SE:c+=h,a+=u,r=!0;break;case NodeCursorMode.RESIZE_S:a+=u,r=!0;break;case NodeCursorMode.RESIZE_SW:a+=u,n+=h,c-=h,r=!0;break;case NodeCursorMode.RESIZE_W:n+=h,c-=h,r=!0;break;case NodeCursorMode.RESIZE_NW:d+=u,a-=u,n+=h,c-=h,r=!0}r&&(this.setDimension(n,d,c,a,o),this.editor.decorations.recalculate(),this.editor.decorations.draw(),this.resized())};o.append(d),s.append(o).css({left:`${this.left}px`,top:`${this.top}px`,width:`${this.width}px`,height:`${this.height}px`,padding:`${this.constructor.padding}px`}).on("mousemove",(t=>{if(!this.fixed&&i==NodeCursorMode.NONE){let e=t.target;for(;e!==s.element&&(e=e.parentElement,!isEmpty(e)););if(e!==s.element)return;let o=s.element.getBoundingClientRect(),i=this.constructor.edgeHandlerTolerance*this.editor.zoom,n=this.constructor.headerHeight*this.editor.zoom,d=t.clientY>=o.y&&t.clientY<o.y+i,c=t.clientX>=o.x&&t.clientX<o.x+i,a=t.clientX>=o.x+o.width-i,h=t.clientY>=o.y+o.height-i,u=!0===this.flipped?!h&&t.clientY>=o.y+o.height-n-i:!d&&t.clientY>=o.y&&t.clientY<o.y+i+n;switch(r=d&&c&&this.constructor.canResizeX&&this.constructor.canResizeY?NodeCursorMode.RESIZE_NW:d&&a&&this.constructor.canResizeX&&this.constructor.canResizeY?NodeCursorMode.RESIZE_NE:d&&this.constructor.canResizeY?NodeCursorMode.RESIZE_N:h&&c&&this.constructor.canResizeX&&this.constructor.canResizeY?NodeCursorMode.RESIZE_SW:h&&a&&this.constructor.canResizeX&&this.constructor.canResizeY?NodeCursorMode.RESIZE_SE:h&&this.constructor.canResizeY?NodeCursorMode.RESIZE_S:c&&this.constructor.canResizeX?NodeCursorMode.RESIZE_W:a&&this.constructor.canResizeX?NodeCursorMode.RESIZE_E:u&&this.constructor.canMove&&!c&&!a?NodeCursorMode.MOVE:NodeCursorMode.NONE,r){case NodeCursorMode.MOVE:s.css("cursor","grab");break;case NodeCursorMode.RESIZE_NE:case NodeCursorMode.RESIZE_SW:s.css("cursor","nesw-resize");break;case NodeCursorMode.RESIZE_N:case NodeCursorMode.RESIZE_S:s.css("cursor","ns-resize");break;case NodeCursorMode.RESIZE_E:case NodeCursorMode.RESIZE_W:s.css("cursor","ew-resize");break;case NodeCursorMode.RESIZE_NW:case NodeCursorMode.RESIZE_SE:s.css("cursor","nwse-resize");break;default:s.css("cursor",this.constructor.defaultCursor)}}})).on("mousedown",(o=>{if(!this.fixed&&1===o.which&&r!==NodeCursorMode.NONE&&i===NodeCursorMode.NONE)switch(o.preventDefault(),o.stopPropagation(),this.editor.focusNode(this),r){case NodeCursorMode.MOVE:case NodeCursorMode.RESIZE_NE:case NodeCursorMode.RESIZE_SW:case NodeCursorMode.RESIZE_N:case NodeCursorMode.RESIZE_S:case NodeCursorMode.RESIZE_E:case NodeCursorMode.RESIZE_W:case NodeCursorMode.RESIZE_NW:case NodeCursorMode.RESIZE_SE:switch([t,e]=[o.clientX,o.clientY],i=r,i){case NodeCursorMode.MOVE:this.editor.node.css("cursor","grab");break;case NodeCursorMode.RESIZE_NE:case NodeCursorMode.RESIZE_SW:this.editor.node.css("cursor","nesw-resize");break;case NodeCursorMode.RESIZE_N:case NodeCursorMode.RESIZE_S:this.editor.node.css("cursor","ns-resize");break;case NodeCursorMode.RESIZE_E:case NodeCursorMode.RESIZE_W:this.editor.node.css("cursor","ew-resize");break;case NodeCursorMode.RESIZE_NW:case NodeCursorMode.RESIZE_SE:this.editor.node.css("cursor","nwse-resize");break;default:this.editor.node.css("cursor",this.constructor.defaultCursor)}let n=o=>{a(o,!0),i=NodeCursorMode.NONE,[t,e]=[null,null],this.editor.node.off("mouseup,mouseleave,mousemove").css("cursor",this.constructor.defaultCursor),s.off("mouseup"),this.editor.constructor.disableCursor&&this.editor.node.css("pointer-events","none")};this.editor.node.on("mousemove",(t=>{t.preventDefault(),t.stopPropagation(),a(t,!1)})).on("mouseup,mouseleave",(t=>{t.preventDefault(),t.stopPropagation(),n(t)})),s.on("mouseup",(t=>{n(t)})),this.editor.constructor.disableCursor&&this.editor.node.css("pointer-events","all")}}));let h=await this.getContent(),u=E.nodeContents();return isEmpty(h)||(h instanceof View&&(h=await h.getNode()),u.content(h)),u.on("mousedown",(t=>{this.fixed||this.editor.focusNode(this)})),this.constructor.fixedHeight||(this.constructor.hideHeader||this.constructor.fixedHeader?u.css("height","100%"):u.css("height",`calc(100% - ${this.constructor.headerHeight}px)`)),o.append(u),s}}export{NodeView};
