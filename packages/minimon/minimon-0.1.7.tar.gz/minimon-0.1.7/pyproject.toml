[tool.poetry]
name = "minimon"
version = "0.1.7"
description = "minimon"
authors = ["Frans FÃ¼rst <frans.fuerst@protonmail.com>"]
repository = "https://projects.om-office.de/frans/minimon.git"
readme = "Readme.md"
packages = [
  {include = "minimon"},
  {include = "minimon/py.typed"},
  # {include = "minimon/**/*.css"},
  # {include = "minimon/static"},
  # {include = "minimon/templates"},
  # {include = "sites/**/*.py"},
]

[tool.poetry.scripts]
minimon = 'minimon.cli:main'

[tool.poetry.dependencies]
python = ">=3.10,<4.0.0"
asyncinotify = "^4.0"
# quart = "^0.18.4"  # later: use quart to provide web interface
# chime = "^0.7.0"   # later: use chime to scare users audibly
textual = "^0"
asyncssh = "^2.13"
bcrypt = "^4.0.1"
psutil = "^5.9"
scapy = "^2.5"
apparat = "^0.0.10"
pydantic = "^2"

[tool.poetry.group.dev.dependencies]
black = "^22"
isort = "^5"
pytest = "^7"
pytest-cov = "^3"
mypy = "^1.5"
pylint = "^2"
ipython = "^8"
types-pyyaml = "^6"
twine = "^4"
yamllint = "^1"
pylint-per-file-ignores = "^1"
types-psutil = "^5"

# see https://pypi.org/project/poetry-bumpversion
[tool.poetry_bumpversion.file."minimon/__init__.py"]
[tool.poetry_bumpversion.file."minimon/server.py"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
fast = true
exclude = '''
(                           # exclude a few common directories in the root of the project
  /(                        # note that this has to be done in .pre-commit-config.yaml, too
    untracked
    | \.git
    | \.pytest_cache
    | \.mypy_cache
    | \.venv
    | \.container_home_dir
    | untracked
    | dist
    | minimon/sites         # don't touch our nicely formatted site definitions
  ))
'''


[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.10"
strict="True"
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = [
    '\.venv',
    '\.container_home_dir',
]
mypy_path="typeshed"

[tool.pylint]
#ignore = [".venv", "untracked"]

# Files or directories matching the regular expression patterns are skipped. The
# regex matches against base names, not paths. The default value ignores Emacs
# file locks
#ignore-patterns = ["^\\.#"]

# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use, and will cap the count on Windows to
# avoid hangs.
jobs = 0

#[tool.pylint.MASTER]
#load-plugins=["pylint_per_file_ignores"]

#[tool.pylint-per-file-ignores]
#"pocketrockit/examples/" = "invalid-name"
