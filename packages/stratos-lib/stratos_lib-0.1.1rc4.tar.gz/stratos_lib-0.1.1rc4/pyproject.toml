[project]
name = "stratos-lib"
version = "0.1.1rc4"
description = "Reusable common infrastructure constructs via Pulumi infrastructure-as-code."
authors = [
    { name = "Matt White", email = "mail@matt-w.net" }
]
dependencies = [
    "pulumi>=3.97.0",
    "pulumi-aws>=6.14.0",
    "pydantic-settings>=2.1.0",
]
readme = "README.md"
requires-python = ">= 3.8"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "black>=23.12.0",
    "flake8>=5.0.4",
    "pyright>=1.1.341",
    "ruff>=0.1.8",
    "isort>=5.13.2",
    "bandit>=1.7.6",
    "pytest>=7.4.3",
    "pylint>=3.0.3",
    "ipdb>=0.13.13",
    "pyproject-flake8>=5.0.4.post1",
    "pip>=23.3.1",
]

[tool.rye.scripts]
"fmt:black" = "black . --preview -l 79"
"fmt:isort" = "isort tests/ src/"
"lint:ruff" = "ruff check src"
"lint:ruff-tests" = "ruff check tests --ignore F811,F403"
"lint:flake8" = "pflake8 src/"
"lint:flake8-tests" = "pflake8 tests/ --ignore F401,F811,F403"
"lint:bandit" = "bandit -r src/"
"lint:pylint" = "pylint src/"
"lint:pylint-tests" = "pylint tests/ --disable=W0613,W0621"
"typecheck" = "pyright"
"typestubs" = "pyright --createstub modelsmith"
lint = { chain = [ "lint:ruff", "lint:ruff-tests", "lint:flake8", "lint:flake8-tests", "lint:bandit", "lint:pylint", "lint:pylint-tests" ] }
"test" = { cmd = "pytest -x", env = { ENVFILE = ".env.test"} }
quality = { chain = [ "fmt:isort", "fmt:black", "lint:ruff", "lint:ruff-tests", "lint:flake8", "lint:flake8-tests", "typecheck", "test", "lint:pylint", "lint:pylint-tests", "lint:bandit" ] }

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
testpaths = [
  "tests"
]

[tool.black]
skip-numeric-underscore-normalization = true
line-length = 79
target-version = ['py310', 'py311']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 79
split_on_trailing_comma = true


[tool.bandit]
exclude_dirs = ["tests"]
skips = ["C0114", "C0116"]


[tool.pylint.'MESSAGES CONTROL']
max-line-length = 79
min-similarity-lines = 7
extension-pkg-whitelist = "pydantic"
disable = """
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    too-few-public-methods,
    unsubscriptable-object,
    fixme,
    wildcard-import,
    unused-wildcard-import,
    method-cache-max-size-none,
    invalid-name,
    unused-argument,
"""

[tool.pyright]
include = ["src", "tests"]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  "**/typings",
  "**/typestubs"
]
reportUnknownMemberType = false
reportPrivateImportUsage = false
typeCheckingMode = "basic"
stubPath = "typestubs"
pythonVersion = "3.10"

[tool.ruff]
exclude = ["typestubs"]
ignore = ["F401"]

[tool.flake8]
ignore = ["E203", "W503"]

