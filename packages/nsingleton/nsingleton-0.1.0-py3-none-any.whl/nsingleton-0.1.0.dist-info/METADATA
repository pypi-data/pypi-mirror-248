Metadata-Version: 2.1
Name: nsingleton
Version: 0.1.0
Summary: New Singleton decorator. Just another singleton pattern implementation. Thread-safe, with type casting.
Keywords: python singleton pattern decorator
Author-Email: Nikolay Shishov <nikolay.shishov@gmail.com>
License: MIT License
        
        Copyright Â© 2023 Nikolay Shishov. All rights reserved.
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Project-URL: Repository, https://github.com/nickosh/nsingleton
Requires-Python: >=3.8
Description-Content-Type: text/markdown

NSingleton
============

:star2: [Features](#star2-features) | :pushpin: [What and why](#pushpin-what-and-why) | :gear: [Run and configuration](#gear-run-and-configuration) | :scroll: [License](#scroll-license)

New Singleton decorator. Just another singleton pattern implementation. Thread-safe, with type casting.

<!-- Features -->
:star2: Features
---------------

- Yet another singleton decoration implementation. This one just works;
- Thread-safe decorator?! I'm not really sure it works or is needed, but let it be;
- Type casting! VSCode's linters are not screaming and auto-completion works as expected;

<!-- What and why -->
:pushpin: What and why
---------------

Just wanted to push my singleton as a library to be able to reuse it in my projects. Going to support it as well. Please do not hesitate to ask questions or make suggestions if anything.

<!-- Run and configuration -->
:gear: Run and configuration
---------------

Install library with PyPi, import and use.

<!-- License -->
:scroll: License
---------------

Distributed under the [MIT License](https://spdx.org/licenses/MIT.html) license. See LICENSE for more information.
