import sys
# caution: path[0] is reserved for script path (or '' in REPL)

# Import all our tests:
from TestSplitting import TestSplitting
from TestPrints import TestPrints
from TestBreakDown import TestBreakDown
from TestShifting import TestShifting_a
from TestShifting import TestShifting_b
from TestShifting import TestShifting_c
from TestShifting import TestShifting_d
from TestShifting import TestShifting_e
from TestShifting import TestShifting_f
from TestCountries import TestCountry_a
from TestCountries import TestCountry_b
from TestCountries import TestCountry_c
from TestCountries import TestCountry_d
from TestCountries import TestCountry_e
from TestCountries import TestCountry_f
from TestCountries import TestCountry_g
from TestExports import TestExport_Alineas_a
from TestExports import TestExport_Alineas_b
from TestExports import TestExport_Alineas_c
from TestExports import TestExport_Alineas_d
from TestExports import TestExport_Alineas_e
from TestExports import TestExport_Decisions_a
from TestExports import TestExport_Decisions_b
from TestFontSizeHist import TestFontSizeHist
from TestEnumerations import TestEnumerations_a
from TestEnumerations import TestEnumerations_b
from TestEnumerations import TestEnumerations_c
from TestEnumerations import TestEnumerations_d
from TestEnumerations import TestEnumerations_e
from TestEnumerations import TestEnumerations_f
from TestFontStyleRecognition import TestFontStyleRecognition_a
from TestFontStyleRecognition import TestFontStyleRecognition_b
from TestFontStyleRecognition import TestFontStyleRecognition_c
from TestFontStyleRecognition import TestFontStyleRecognition_d
from TestFontStyleRecognition import TestFontStyleRecognition_e
from TestFontStyleRecognition import TestFontStyleRecognition_f
from TestFontRegions import fontregion_testfindfontregions
from TestFontRegions import fontregion_testfindfontregions_1bin
from TestFontRegions import fontregion_testfindfontregions_2bin_a
from TestFontRegions import fontregion_testfindfontregions_2bin_b
from TestFontRegions import fontregion_testcompare
from TestFontRegions import fontregion_testisinregion
from TestFontRegions import testfontregion_searchfunctions
from TestHTMLPrint import TestHTMLconversion
from TestKeywords import TestKeywords_a
from TestKeywords import TestKeywords_b
from TestLayeredSummary import TestLayeredSummary_a
from TestLayeredSummary import TestLayeredSummary_b
from TestLayeredSummary import TestLayeredSummary_c
from TestLayeredSummary import TestLayeredSummary_d
from TestLayeredSummary import TestLayeredSummary_e
from TestMasterRule import TestMasterRule_a
from TestPassInfo import TestPassInfo_body
from TestPassInfo import TestPassInfo_title
from TestPassInfo import TestPassInfo_headlines
from TestPassInfo import TestPassInfo_alineas
from TestPassInfo import TestPassInfo_footer
from TestCalculateBoundaries import TestCalculateBoundaries_a
from TestCalculateBoundaries import TestCalculateBoundaries_b
from TestCalculateBoundaries import TestCalculateBoundaries_c
from TestRegex import TestRegex_remove_nonletters
from TestRegex import TestRegex_contains_tablecontentsregex
from TestRegex import TestRegex_contains_chapterregex
from TestRegex import TestRegex_contains_artikelregex
from TestRegex import TestRegex_contains_sectionregex
from TestRegex import TestRegex_contains_subsectionregex
from TestRegex import TestRegex_contains_subsubsectionregex
from TestRegex import TestRegex_contains_bigroman_enumeration_regex
from TestRegex import TestRegex_contains_smallroman_enumeration_regex
from TestRegex import TestRegex_contains_bigletter_enumeration_regex
from TestRegex import TestRegex_contains_smallletter_enumeration_regex
from TestRegex import TestRegex_contains_digit_enumeration_regex
from TestRegex import TestRegex_contains_pointtwo_enumeration_regex
from TestRegex import TestRegex_contains_pointh_enumeration_regex
from TestRegex import TestRegex_contains_pointi_enumeration_regex
from TestRegex import TestRegex_contains_pointii_enumeration_regex
from TestRegex import TestRegex_contains_pointj_enumeration_regex
from TestRegex import TestRegex_contains_pointH_enumeration_regex
from TestRegex import TestRegex_contains_pointI_enumeration_regex
from TestRegex import TestRegex_contains_pointII_enumeration_regex
from TestRegex import TestRegex_contains_pointJ_enumeration_regex
from TestRegex import TestRegex_contains_signmark_enumeration_regex
from TestRegex import TestRegex_contains_headlinesregex
from TestRegex import TestRegex_contains_headlines_nochapter_regex
from TestRegex import TestRegex_equals_artikelregex
from TestRegex import TestRegex_text_isnotcapped
from TestRegex import TestRegex_lettersigning
from TestRaising import TestRaising_a
from TestRules import TestRule_body
from TestRules import TestRule_headlines_a
from TestRules import TestRule_footer
from TestRules import TestRule_title
from TestRules import TestRule_enumeration_a
from TestRules import TestRule_enumeration_b
from TestRules import TestRule_alinea
from TestRules import TestRule_textpart
from TestRules import TestMasterRule_textpart
from TestSplitDoc import TestSplitDoc_a
from TestSplitDoc import TestSplitDoc_b
from TestSplitDoc import TestSplitDoc_c
from TestSplitDoc import TestSplitDoc_d
from TestSplitDoc import TestSplitDoc_e
from TestTwoColumns import TestTwoColumns_a
from TestStringMatch import TestStringMatch
from TestSummarize import TestSummarize_a
from TestSummarize import TestSummarize_b
from TestSummarize import TestSummarize_c
from TestSummarize import TestSummarize_d
from TestSummarize import TestSummarize_e
from TestSummarize import TestSummarize_f
from TestSummarize import TestSummarize_g
from TestSummarize import TestSummarize_h
from TestSummarize import TestSummarize_i
from TestSummarize import TestSummarize_j
from TestSummarize import TestSummarize_k
from TestSummarize import TestSummarize_l
from TestTextPart import textpart_basetest
from TestTextPart import textpart_shallowcopytest
from TestTextPart import textpart_exporttest_a
from TestTextPart import textpart_exporttest_b
from TestTextPart import textpart_exporttest_c
from TestTextPart import textpart_exporttest_d
from TestTextPart import textpart_exporttest_e
from TestTextPart import textpart_exporttest_f
from TestTextPart import textpart_loadtest
from TestTextPart import textpart_histtest
from TestTextPart import textpart_generationtest_a
from TestTextPart import textpart_generationtest_b
from TestTextPart import textpart_generationtest_c
from TestTextPart import textpart_generationtest_e
from TestTextPart import textpart_generationtest_f
from TestTextSplitter import textsplitter_basetest
from TestTextSplitter import textsplitter_metadatatest
from TestTextSplitter import textsplitter_processtest
from TestTextSplitter import textsplitter_readingspacestest_a
from TestTextSplitter import textsplitter_readingspacestest_b
from TestTitleLines import TestTitleLines_a
from TestTitleLines import TestTitleLines_b
from TestTitleLines import TestTitleLines_c
from TestTitleLines import TestTitleLines_d
from TestTitleLines import TestTitleLines_e
from TestTitleLines import TestTitleLines_f
from TestTOCExtraction import TestTOCExtraction_a
from TestTOCExtraction import TestTOCExtraction_b
from TestTOCExtraction import TestTOCExtraction_c
from TestTOCExtraction import TestTOCExtraction_d
from TestTOCExtraction import TestTOCExtraction_e
from TestTOCExtraction import TestTOCExtraction_f
from TestTreeStructure import TestTreeStructure_a
from TestTreeStructure import TestTreeStructure_b
from TestTreeStructure import TestTreeStructure_c
from TestTreeStructure import TestTreeStructure_d
from TestTreeStructure import TestTreeStructure_e
from TestTreeStructure import TestTreeStructure_f
from TestWhiteLineHist import TestWhiteLineHist
from TestLineRegions import lineregion_testfindlineregions
from TestLineRegions import lineregion_testfindlineregions_absorbing
from TestLineRegions import lineregion_testfindlineregions_endpeaks
from TestLineRegions import lineregion_testfindlineregions_1bin
from TestLineRegions import lineregion_testfindlineregions_2bin_a
from TestLineRegions import lineregion_testfindlineregions_2bin_b
from TestLineRegions import lineregion_testcompare
from TestLineRegions import lineregion_testisinregion
from TestLineRegions import testlineregion_searchfunctions
from TestWhiteLines import TestWhiteLines_a
from TestWhiteLines import TestWhiteLines_b
from TestWhiteLines import TestWhiteLines_c
from TestWhiteLines import TestWhiteLines_d
from TestWordCloud import TestWordCloud
from TextExtraction_001 import TextExtraction_001a
from TextExtraction_001 import TextExtraction_001b
from TextExtraction_001 import TextExtraction_001d
from TextExtraction_001 import TextExtraction_001e
from TextExtraction_001 import TextExtraction_001
from TextExtraction_002 import TextExtraction_002a
from TextExtraction_002 import TextExtraction_002b

# Next use pytest to run all of our tests. In order to get pytest to pick
# up on our tests, we have to make sure that the script name is test_*.py and
# each function needs to starts with test_*() as well. Inside such a function,
# we need to call on of our own tests using the assert-command native to python.
# It works best if we only use a single assert-command per test_*()-function.

# NOTE: Documentation can be found at:
# https://coverage.readthedocs.io/en/latest/cmd.html
# https://docs.pytest.org/en/7.1.x/getting-started.html
# https://www.sealights.io/agile-testing/test-metrics/python-code-coverage/
# And of course, the Code.sh script.

def test_TestSplitting(): assert TestSplitting()==True
def test_TestPrints(): assert TestPrints()==True
def test_TestBreakDown(): assert TestBreakDown()==True
def test_TestShifting_a(): assert TestShifting_a()==True
def test_TestShifting_b(): assert TestShifting_b()==True
def test_TestShifting_c(): assert TestShifting_c()==True
def test_TestShifting_d(): assert TestShifting_d()==True
def test_TestShifting_e(): assert TestShifting_e()==True
def test_TestShifting_f(): assert TestShifting_f()==True
def test_TestCountry_a(): assert TestCountry_a()==True
def test_TestCountry_b(): assert TestCountry_b()==True
def test_TestCountry_c(): assert TestCountry_c()==True
def test_TestCountry_d(): assert TestCountry_d()==True
def test_TestCountry_e(): assert TestCountry_e()==True
def test_TestCountry_f(): assert TestCountry_f()==True
def test_TestCountry_g(): assert TestCountry_g()==True
def test_TestExport_Alineas_a(): assert TestExport_Alineas_a()==True
def test_TestExport_Alineas_b(): assert TestExport_Alineas_b()==True
def test_TestExport_Alineas_c(): assert TestExport_Alineas_c()==True
def test_TestExport_Alineas_d(): assert TestExport_Alineas_d()==True
def test_TestExport_Alineas_e(): assert TestExport_Alineas_e()==True
def test_TestExport_Decisions_a(): assert TestExport_Decisions_a()==True
def test_TestExport_Decisions_b(): assert TestExport_Decisions_b()==True
def test_TestFontSizeHist(): assert TestFontSizeHist()==True
def test_TestEnumerations_a(): assert TestEnumerations_a(True)==True
def test_TestEnumerations_b(): assert TestEnumerations_b(True)==True
def test_TestEnumerations_c(): assert TestEnumerations_c(True)==True
def test_TestEnumerations_d(): assert TestEnumerations_d(True)==True
def test_TestEnumerations_e(): assert TestEnumerations_e(True)==True
def test_TestEnumerations_f(): assert TestEnumerations_f(True)==True
def test_TestFontStyleRecognition_a(): assert TestFontStyleRecognition_a()==True
def test_TestFontStyleRecognition_b(): assert TestFontStyleRecognition_b()==True
def test_TestFontStyleRecognition_c(): assert TestFontStyleRecognition_c()==True
def test_TestFontStyleRecognition_d(): assert TestFontStyleRecognition_d()==True
def test_TestFontStyleRecognition_e(): assert TestFontStyleRecognition_e()==True
def test_TestFontStyleRecognition_f(): assert TestFontStyleRecognition_f()==True
def test_fontregion_testfindfontregions(): assert fontregion_testfindfontregions()==True
def test_fontregion_testfindfontregions_1bin(): assert fontregion_testfindfontregions_1bin()==True
def test_fontregion_testfindfontregions_2bin_a(): assert fontregion_testfindfontregions_2bin_a()==True
def test_fontregion_testfindfontregions_2bin_b(): assert fontregion_testfindfontregions_2bin_b()==True
def test_fontregion_testcompare(): assert fontregion_testcompare()==True
def test_fontregion_testisinregion(): assert fontregion_testisinregion()==True
def test_testfontregion_searchfunctions(): assert testfontregion_searchfunctions()==True
def test_TestHTMLconversion(): assert TestHTMLconversion()==True
def test_TestKeywords_a(): assert TestKeywords_a()==True
def test_TestKeywords_b(): assert TestKeywords_b()==True
def test_TestLayeredSummary_a(): assert TestLayeredSummary_a()==True
def test_TestLayeredSummary_b(): assert TestLayeredSummary_b()==True
def test_TestLayeredSummary_c(): assert TestLayeredSummary_c()==True
def test_TestLayeredSummary_d(): assert TestLayeredSummary_d()==True
def test_TestLayeredSummary_e(): assert TestLayeredSummary_e()==True
def test_TestMasterRule_a(): assert TestMasterRule_a()==True
def test_TestPassInfo_body(): assert TestPassInfo_body()==True
def test_TestPassInfo_footer(): assert TestPassInfo_footer()==True
def test_TestCalculateBoundaries_a(): assert TestCalculateBoundaries_a()==True
def test_TestCalculateBoundaries_b(): assert TestCalculateBoundaries_b()==True
def test_TestCalculateBoundaries_c(): assert TestCalculateBoundaries_c()==True
def test_TestPassInfo_headlines(): assert TestPassInfo_headlines()==True
def test_TestPassInfo_title(): assert TestPassInfo_title()==True
def test_TestPassInfo_alineas(): assert TestPassInfo_alineas()==True
def test_TestRegex_remove_nonletters(): assert TestRegex_remove_nonletters()==True
def test_TestRegex_contains_tablecontentsregex(): assert TestRegex_contains_tablecontentsregex()==True
def test_TestRegex_contains_chapterregex(): assert TestRegex_contains_chapterregex()==True
def test_TestRegex_contains_artikelregex(): assert TestRegex_contains_artikelregex()==True
def test_TestRegex_contains_sectionregex(): assert TestRegex_contains_sectionregex()==True
def test_TestRegex_contains_subsectionregex(): assert TestRegex_contains_subsectionregex()==True
def test_TestRegex_contains_subsubsectionregex(): assert TestRegex_contains_subsubsectionregex()==True
def test_TestRegex_contains_bigroman_enumeration_regex(): assert TestRegex_contains_bigroman_enumeration_regex()==True
def test_TestRegex_contains_smallroman_enumeration_regex(): assert TestRegex_contains_smallroman_enumeration_regex()==True
def test_TestRegex_contains_bigletter_enumeration_regex(): assert TestRegex_contains_bigletter_enumeration_regex()==True
def test_TestRegex_contains_smallletter_enumeration_regex(): assert TestRegex_contains_smallletter_enumeration_regex()==True
def test_TestRegex_contains_digit_enumeration_regex(): assert TestRegex_contains_digit_enumeration_regex()==True
def test_TestRegex_contains_pointtwo_enumeration_regex(): assert TestRegex_contains_pointtwo_enumeration_regex()==True
def test_TestRegex_contains_pointh_enumeration_regex(): assert TestRegex_contains_pointh_enumeration_regex()==True
def test_TestRegex_contains_pointi_enumeration_regex(): assert TestRegex_contains_pointi_enumeration_regex()==True
def test_TestRegex_contains_pointii_enumeration_regex(): assert TestRegex_contains_pointii_enumeration_regex()==True
def test_TestRegex_contains_pointj_enumeration_regex(): assert TestRegex_contains_pointj_enumeration_regex()==True
def test_TestRegex_contains_pointH_enumeration_regex(): assert TestRegex_contains_pointH_enumeration_regex()==True
def test_TestRegex_contains_pointI_enumeration_regex(): assert TestRegex_contains_pointI_enumeration_regex()==True
def test_TestRegex_contains_pointII_enumeration_regex(): assert TestRegex_contains_pointII_enumeration_regex()==True
def test_TestRegex_contains_pointJ_enumeration_regex(): assert TestRegex_contains_pointJ_enumeration_regex()==True
def test_TestRegex_contains_signmark_enumeration_regex(): assert TestRegex_contains_signmark_enumeration_regex()==True
def test_TestRegex_contains_headlinesregex(): assert TestRegex_contains_headlinesregex()==True
def test_TestRegex_contains_headlines_nochapter_regex(): assert TestRegex_contains_headlines_nochapter_regex()==True
def test_TestRegex_equals_artikelregex(): assert TestRegex_equals_artikelregex()==True
def test_TestRegex_text_isnotcapped(): assert TestRegex_text_isnotcapped()==True
def test_TestRegex_lettersigning(): assert TestRegex_lettersigning()==True
def test_TestRaising_a(): assert TestRaising_a()==True
def test_TestRule_body(): assert TestRule_body()==True
def test_TestRule_headlines_a(): assert TestRule_headlines_a()==True
def test_TestRule_footer(): assert TestRule_footer()==True
def test_TestRule_enumeration_a(): assert TestRule_enumeration_a()==True
def test_TestRule_enumeration_b(): assert TestRule_enumeration_b()==True
def test_TestRule_title(): assert TestRule_title()==True
def test_TestRule_alinea(): assert TestRule_alinea()==True
def test_TestRule_textpart(): assert TestRule_textpart()==True
def test_TestMasterRule_textpart(): assert TestMasterRule_textpart()==True
def test_TestSplitDoc_a(): assert TestSplitDoc_a(True)==True
def test_TestSplitDoc_b(): assert TestSplitDoc_b(True)==True
def test_TestSplitDoc_c(): assert TestSplitDoc_c(True)==True
def test_TestSplitDoc_d(): assert TestSplitDoc_d(True)==True
def test_TestSplitDoc_e(): assert TestSplitDoc_e(True)==True
def test_TestTwoColumns_a(): assert TestTwoColumns_a(True)==True
def test_TestStringMatch(): assert TestStringMatch()==True
def test_TestSummarize_a(): assert TestSummarize_a(True)==True
def test_TestSummarize_b(): assert TestSummarize_b(True)==True
def test_TestSummarize_c(): assert TestSummarize_c(True)==True
def test_TestSummarize_d(): assert TestSummarize_d(True)==True
def test_TestSummarize_e(): assert TestSummarize_e(True)==True
def test_TestSummarize_f(): assert TestSummarize_f(True)==True
def test_TestSummarize_g(): assert TestSummarize_g(True)==True
def test_TestSummarize_h(): assert TestSummarize_h(True)==True
def test_TestSummarize_i(): assert TestSummarize_i(True)==True
def test_TestSummarize_j(): assert TestSummarize_j(True)==True
def test_TestSummarize_k(): assert TestSummarize_k(True)==True
def test_TestSummarize_l(): assert TestSummarize_l(True)==True
def test_textpart_basetest(): assert textpart_basetest()==True
def test_textpart_shallowcopytest(): assert textpart_shallowcopytest()==True
def test_textpart_exporttest_a(): assert textpart_exporttest_a()==True
def test_textpart_exporttest_b(): assert textpart_exporttest_b()==True
def test_textpart_exporttest_c(): assert textpart_exporttest_c()==True
def test_textpart_exporttest_d(): assert textpart_exporttest_d()==True
def test_textpart_exporttest_e(): assert textpart_exporttest_e()==True
def test_textpart_exporttest_f(): assert textpart_exporttest_f()==True
def test_textpart_loadtest(): assert textpart_loadtest()==True
def test_textpart_histtest(): assert textpart_histtest()==True
def test_textpart_generationtest_a(): assert textpart_generationtest_a()==True
def test_textpart_generationtest_b(): assert textpart_generationtest_b()==True
def test_textpart_generationtest_c(): assert textpart_generationtest_c()==True
def test_textpart_generationtest_e(): assert textpart_generationtest_e()==True
def test_textpart_generationtest_f(): assert textpart_generationtest_f()==True
def test_textsplitter_basetest(): assert textsplitter_basetest()==True
def test_textsplitter_metadatatest(): assert textsplitter_metadatatest()==True
def test_textsplitter_processtest(): assert textsplitter_processtest()==True
def test_textsplitter_readingspacestest_a(): assert textsplitter_readingspacestest_a()==True
def test_textsplitter_readingspacestest_b(): assert textsplitter_readingspacestest_b()==True
def test_TestTitleLines_a(): assert TestTitleLines_a()==True
def test_TestTitleLines_b(): assert TestTitleLines_b()==True
def test_TestTitleLines_c(): assert TestTitleLines_c()==True
def test_TestTitleLines_d(): assert TestTitleLines_d()==True
def test_TestTitleLines_e(): assert TestTitleLines_e()==True
def test_TestTitleLines_f(): assert TestTitleLines_f()==True
def test_TestTOCExtraction_a(): assert TestTOCExtraction_a()==True
def test_TestTOCExtraction_b(): assert TestTOCExtraction_b()==True
def test_TestTOCExtraction_c(): assert TestTOCExtraction_c()==True
def test_TestTOCExtraction_d(): assert TestTOCExtraction_d()==True
def test_TestTOCExtraction_e(): assert TestTOCExtraction_e()==True
def test_TestTOCExtraction_f(): assert TestTOCExtraction_f()==True
def test_TestTreeStructure_a(): assert TestTreeStructure_a()==True
def test_TestTreeStructure_b(): assert TestTreeStructure_b()==True
def test_TestTreeStructure_c(): assert TestTreeStructure_c()==True
def test_TestTreeStructure_d(): assert TestTreeStructure_d()==True
def test_TestTreeStructure_e(): assert TestTreeStructure_e()==True
def test_TestTreeStructure_f(): assert TestTreeStructure_f()==True
def test_TestWhiteLineHist(): assert TestWhiteLineHist()==True
def test_lineregion_testfindlineregions(): assert lineregion_testfindlineregions()==True
def test_lineregion_testfindlineregions_absorbing(): assert lineregion_testfindlineregions_absorbing()==True
def test_lineregion_testfindlineregions_endpeaks(): assert lineregion_testfindlineregions_endpeaks()==True
def test_lineregion_testfindlineregions_1bin(): assert lineregion_testfindlineregions_1bin()==True
def test_lineregion_testfindlineregions_2bin_a(): assert lineregion_testfindlineregions_2bin_a()==True
def test_lineregion_testfindlineregions_2bin_b(): assert lineregion_testfindlineregions_2bin_b()==True
def test_lineregion_testcompare(): assert lineregion_testcompare()==True
def test_lineregion_testisinregion(): assert lineregion_testisinregion()==True
def test_testlineregion_searchfunctions(): assert testlineregion_searchfunctions()==True
def test_TestWhiteLines_a(): assert TestWhiteLines_a(True)==True
def test_TestWhiteLines_b(): assert TestWhiteLines_b(True)==True
def test_TestWhiteLines_c(): assert TestWhiteLines_c(True)==True
def test_TestWhiteLines_d(): assert TestWhiteLines_d(True)==True
def test_TestWordCloud(): assert TestWordCloud()==True
def test_TextExtraction_001a(): assert TextExtraction_001a()==True
def test_TextExtraction_001b(): assert TextExtraction_001b()==True
def test_TextExtraction_001(): assert TextExtraction_001()==True # because detectsystem is not implemented in c, but in the main.
def test_TextExtraction_001d(): assert TextExtraction_001d()==True
def test_TextExtraction_001e(): assert TextExtraction_001e()==True
def test_TextExtraction_002a(): assert TextExtraction_002a()==True
def test_TextExtraction_002b(): assert TextExtraction_002b()==True
