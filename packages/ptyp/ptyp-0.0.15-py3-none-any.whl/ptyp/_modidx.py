# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/ptyp',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/ptyp',
                'lib_path': 'ptyp'},
  'syms': { 'ptyp.cons': {},
            'ptyp.grds': { 'ptyp.grds.aliascheck': ('grds.html#aliascheck', 'ptyp/grds.py'),
                           'ptyp.grds.checknan': ('grds.html#checknan', 'ptyp/grds.py'),
                           'ptyp.grds.isallsame': ('grds.html#isallsame', 'ptyp/grds.py'),
                           'ptyp.grds.isiter': ('grds.html#isiter', 'ptyp/grds.py'),
                           'ptyp.grds.isnan': ('grds.html#isnan', 'ptyp/grds.py'),
                           'ptyp.grds.isnanlike': ('grds.html#isnanlike', 'ptyp/grds.py'),
                           'ptyp.grds.isnotiterstr': ('grds.html#isnotiterstr', 'ptyp/grds.py'),
                           'ptyp.grds.isorigin': ('grds.html#isorigin', 'ptyp/grds.py'),
                           'ptyp.grds.isstrbytes': ('grds.html#isstrbytes', 'ptyp/grds.py'),
                           'ptyp.grds.istype': ('grds.html#istype', 'ptyp/grds.py'),
                           'ptyp.grds.istyping': ('grds.html#istyping', 'ptyp/grds.py'),
                           'ptyp.grds.trychecks': ('grds.html#trychecks', 'ptyp/grds.py')},
            'ptyp.meta': { 'ptyp.meta.Alias': ('meta.html#alias', 'ptyp/meta.py'),
                           'ptyp.meta.AliasMeta': ('meta.html#aliasmeta', 'ptyp/meta.py'),
                           'ptyp.meta.AliasMeta.getbtype': ('meta.html#aliasmeta.getbtype', 'ptyp/meta.py'),
                           'ptyp.meta.Not': ('meta.html#not', 'ptyp/meta.py'),
                           'ptyp.meta.NotMeta': ('meta.html#notmeta', 'ptyp/meta.py'),
                           'ptyp.meta.NotMeta.check': ('meta.html#notmeta.check', 'ptyp/meta.py'),
                           'ptyp.meta.NotMeta.default_kwds': ('meta.html#notmeta.default_kwds', 'ptyp/meta.py'),
                           'ptyp.meta.NotMeta.getbtype': ('meta.html#notmeta.getbtype', 'ptyp/meta.py'),
                           'ptyp.meta.Opt': ('meta.html#opt', 'ptyp/meta.py'),
                           'ptyp.meta.OptionalMeta': ('meta.html#optionalmeta', 'ptyp/meta.py'),
                           'ptyp.meta.OptionalMeta.__new__': ('meta.html#optionalmeta.__new__', 'ptyp/meta.py'),
                           'ptyp.meta.OptionalMeta.default_kwds': ('meta.html#optionalmeta.default_kwds', 'ptyp/meta.py'),
                           'ptyp.meta.OptionalMeta.getbtype': ('meta.html#optionalmeta.getbtype', 'ptyp/meta.py'),
                           'ptyp.meta.ProtoType': ('meta.html#prototype', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta': ('meta.html#protocolbasemeta', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.__call__': ('meta.html#protocolbasemeta.__call__', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.__init_subclass__': ('meta.html#protocolbasemeta.__init_subclass__', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.__instancecheck__': ('meta.html#protocolbasemeta.__instancecheck__', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.__new__': ('meta.html#protocolbasemeta.__new__', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.check': ('meta.html#protocolbasemeta.check', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.classname': ('meta.html#protocolbasemeta.classname', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.default_kwds': ('meta.html#protocolbasemeta.default_kwds', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.getallattrs': ('meta.html#protocolbasemeta.getallattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.getattrs': ('meta.html#protocolbasemeta.getattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.getbtype': ('meta.html#protocolbasemeta.getbtype', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.getguards': ('meta.html#protocolbasemeta.getguards', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.gethasattrs': ('meta.html#protocolbasemeta.gethasattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.getmapattrs': ('meta.html#protocolbasemeta.getmapattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.getqualname': ('meta.html#protocolbasemeta.getqualname', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.gettypes': ('meta.html#protocolbasemeta.gettypes', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.makebases': ('meta.html#protocolbasemeta.makebases', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.makeguard': ('meta.html#protocolbasemeta.makeguard', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.metadict': ('meta.html#protocolbasemeta.metadict', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.qualname': ('meta.html#protocolbasemeta.qualname', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.setallattrs': ('meta.html#protocolbasemeta.setallattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.setattrs': ('meta.html#protocolbasemeta.setattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.setbtype': ('meta.html#protocolbasemeta.setbtype', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.setguards': ('meta.html#protocolbasemeta.setguards', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.sethasattrs': ('meta.html#protocolbasemeta.sethasattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.setmapattrs': ('meta.html#protocolbasemeta.setmapattrs', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.setqualname': ('meta.html#protocolbasemeta.setqualname', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolBaseMeta.settypes': ('meta.html#protocolbasemeta.settypes', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolMeta': ('meta.html#protocolmeta', 'ptyp/meta.py'),
                           'ptyp.meta.ProtocolMeta.getbtype': ('meta.html#protocolmeta.getbtype', 'ptyp/meta.py')},
            'ptyp.ptyp': { 'ptyp.ptyp.IntQ': ('ptyp.html#intq', 'ptyp/ptyp.py'),
                           'ptyp.ptyp.NotStrBytes': ('ptyp.html#notstrbytes', 'ptyp/ptyp.py'),
                           'ptyp.ptyp.StrBytes': ('ptyp.html#strbytes', 'ptyp/ptyp.py'),
                           'ptyp.ptyp.StrQ': ('ptyp.html#strq', 'ptyp/ptyp.py')},
            'ptyp.type': {},
            'ptyp.util': { 'ptyp.util.argname': ('util.html#argname', 'ptyp/util.py'),
                           'ptyp.util.argsname': ('util.html#argsname', 'ptyp/util.py'),
                           'ptyp.util.classname': ('util.html#classname', 'ptyp/util.py'),
                           'ptyp.util.classvars': ('util.html#classvars', 'ptyp/util.py'),
                           'ptyp.util.filtkwds': ('util.html#filtkwds', 'ptyp/util.py'),
                           'ptyp.util.getname': ('util.html#getname', 'ptyp/util.py'),
                           'ptyp.util.guardtype': ('util.html#guardtype', 'ptyp/util.py'),
                           'ptyp.util.opttypes': ('util.html#opttypes', 'ptyp/util.py'),
                           'ptyp.util.popget': ('util.html#popget', 'ptyp/util.py'),
                           'ptyp.util.qualname': ('util.html#qualname', 'ptyp/util.py'),
                           'ptyp.util.unionify': ('util.html#unionify', 'ptyp/util.py')}}}
