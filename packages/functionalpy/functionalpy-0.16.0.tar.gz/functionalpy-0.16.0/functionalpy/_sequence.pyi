"""
This type stub file was generated by pyright.
"""

from collections.abc import (
    Callable,
    Iterable,
    Iterator,
)
from typing import Generic, TypeVar, overload

T = TypeVar("T")
S = TypeVar("S")

class Seq(Generic[T]):
    def __init__(self, iterable: Iterable[T]) -> None: ...
    @overload
    def __getitem__(self, index: int) -> T: ...
    @overload
    def __getitem__(self, index: slice) -> Seq[T]: ...
    def count(self) -> int: ...
    def to_list(self) -> list[T]: ...
    def to_tuple(self) -> tuple[T, ...]: ...
    def to_iter(self) -> Iterator[T]: ...
    def to_set(self) -> set[T]: ...
    def map(self, func: Callable[[T], S]) -> Seq[S]:  # noqa: A003
        ...
    def pmap(self, func: Callable[[T], S]) -> Seq[S]: ...
    def filter(self, func: Callable[[T], bool]) -> Seq[T]:  # noqa: A003
        ...
    def reduce(self, func: Callable[[T, T], T]) -> T: ...
    def groupby(
        self, func: Callable[[T], str]
    ) -> Seq[tuple[str, list[T]]]: ...
    @overload
    def flatten(self: Seq[list[S]]) -> Seq[S]: ...
    @overload
    def flatten(self: Seq[list[S] | S]) -> Seq[S]: ...
    @overload
    def flatten(self: Seq[tuple[S, ...]]) -> Seq[S]: ...
    @overload
    def flatten(self: Seq[S]) -> Seq[S]: ...
