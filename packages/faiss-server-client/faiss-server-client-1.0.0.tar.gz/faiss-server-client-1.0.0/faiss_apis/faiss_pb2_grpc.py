# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from faiss_apis import faiss_pb2 as apis_dot_faiss__pb2


class FaissServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Heartbeat = channel.unary_unary(
                '/faiss.FaissService/Heartbeat',
                request_serializer=apis_dot_faiss__pb2.Empty.SerializeToString,
                response_deserializer=apis_dot_faiss__pb2.StatusResponse.FromString,
                )
        self.LookIndexInfo = channel.unary_unary(
                '/faiss.FaissService/LookIndexInfo',
                request_serializer=apis_dot_faiss__pb2.LookIndexRequest.SerializeToString,
                response_deserializer=apis_dot_faiss__pb2.LookIndexResponse.FromString,
                )
        self.DeleteIndex = channel.unary_unary(
                '/faiss.FaissService/DeleteIndex',
                request_serializer=apis_dot_faiss__pb2.DeleteIndexRequest.SerializeToString,
                response_deserializer=apis_dot_faiss__pb2.StatusResponse.FromString,
                )
        self.CreateIndex = channel.unary_unary(
                '/faiss.FaissService/CreateIndex',
                request_serializer=apis_dot_faiss__pb2.CreateIndexRequest.SerializeToString,
                response_deserializer=apis_dot_faiss__pb2.StatusResponse.FromString,
                )
        self.AddVector = channel.unary_unary(
                '/faiss.FaissService/AddVector',
                request_serializer=apis_dot_faiss__pb2.AddVectorRequest.SerializeToString,
                response_deserializer=apis_dot_faiss__pb2.StatusResponse.FromString,
                )
        self.Search = channel.unary_unary(
                '/faiss.FaissService/Search',
                request_serializer=apis_dot_faiss__pb2.SearchRequest.SerializeToString,
                response_deserializer=apis_dot_faiss__pb2.SearchResponse.FromString,
                )
        self.SearchById = channel.unary_unary(
                '/faiss.FaissService/SearchById',
                request_serializer=apis_dot_faiss__pb2.SearchByIdRequest.SerializeToString,
                response_deserializer=apis_dot_faiss__pb2.SearchByIdResponse.FromString,
                )


class FaissServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookIndexInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddVector(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FaissServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=apis_dot_faiss__pb2.Empty.FromString,
                    response_serializer=apis_dot_faiss__pb2.StatusResponse.SerializeToString,
            ),
            'LookIndexInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.LookIndexInfo,
                    request_deserializer=apis_dot_faiss__pb2.LookIndexRequest.FromString,
                    response_serializer=apis_dot_faiss__pb2.LookIndexResponse.SerializeToString,
            ),
            'DeleteIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteIndex,
                    request_deserializer=apis_dot_faiss__pb2.DeleteIndexRequest.FromString,
                    response_serializer=apis_dot_faiss__pb2.StatusResponse.SerializeToString,
            ),
            'CreateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndex,
                    request_deserializer=apis_dot_faiss__pb2.CreateIndexRequest.FromString,
                    response_serializer=apis_dot_faiss__pb2.StatusResponse.SerializeToString,
            ),
            'AddVector': grpc.unary_unary_rpc_method_handler(
                    servicer.AddVector,
                    request_deserializer=apis_dot_faiss__pb2.AddVectorRequest.FromString,
                    response_serializer=apis_dot_faiss__pb2.StatusResponse.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=apis_dot_faiss__pb2.SearchRequest.FromString,
                    response_serializer=apis_dot_faiss__pb2.SearchResponse.SerializeToString,
            ),
            'SearchById': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchById,
                    request_deserializer=apis_dot_faiss__pb2.SearchByIdRequest.FromString,
                    response_serializer=apis_dot_faiss__pb2.SearchByIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'faiss.FaissService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FaissService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/Heartbeat',
            apis_dot_faiss__pb2.Empty.SerializeToString,
            apis_dot_faiss__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookIndexInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/LookIndexInfo',
            apis_dot_faiss__pb2.LookIndexRequest.SerializeToString,
            apis_dot_faiss__pb2.LookIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/DeleteIndex',
            apis_dot_faiss__pb2.DeleteIndexRequest.SerializeToString,
            apis_dot_faiss__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/CreateIndex',
            apis_dot_faiss__pb2.CreateIndexRequest.SerializeToString,
            apis_dot_faiss__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddVector(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/AddVector',
            apis_dot_faiss__pb2.AddVectorRequest.SerializeToString,
            apis_dot_faiss__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/Search',
            apis_dot_faiss__pb2.SearchRequest.SerializeToString,
            apis_dot_faiss__pb2.SearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faiss.FaissService/SearchById',
            apis_dot_faiss__pb2.SearchByIdRequest.SerializeToString,
            apis_dot_faiss__pb2.SearchByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
