# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .app_shared_v_0_schema_paged_links_response import AppSharedV0SchemaPagedLinksResponse
from .app_shared_v_0_schema_paged_page_details_response import AppSharedV0SchemaPagedPageDetailsResponse
from .sort_item import SortItem

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class AppSharedV0SchemaPagedMetaResponse(pydantic.BaseModel):
    """
    Metadata about the paginated response
    """

    page: AppSharedV0SchemaPagedPageDetailsResponse = pydantic.Field(description="Details about the total set of data")
    links: AppSharedV0SchemaPagedLinksResponse = pydantic.Field(
        description="Helpful links to other pages in the pagination"
    )
    sort: typing.List[SortItem] = pydantic.Field(
        description="Ordered list of fields to sort on, order of list determines priority"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
