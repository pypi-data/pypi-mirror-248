# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ColumnDisplayType(str, enum.Enum):
    """
    An enumeration.
    """

    DEFAULT = "default"
    ACTION = "action"
    IMAGE = "image"
    RELATIVE_TIMESTAMP = "relative_timestamp"
    STATUS = "status"
    SECRET = "secret"
    PILL = "pill"

    def visit(
        self,
        default: typing.Callable[[], T_Result],
        action: typing.Callable[[], T_Result],
        image: typing.Callable[[], T_Result],
        relative_timestamp: typing.Callable[[], T_Result],
        status: typing.Callable[[], T_Result],
        secret: typing.Callable[[], T_Result],
        pill: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ColumnDisplayType.DEFAULT:
            return default()
        if self is ColumnDisplayType.ACTION:
            return action()
        if self is ColumnDisplayType.IMAGE:
            return image()
        if self is ColumnDisplayType.RELATIVE_TIMESTAMP:
            return relative_timestamp()
        if self is ColumnDisplayType.STATUS:
            return status()
        if self is ColumnDisplayType.SECRET:
            return secret()
        if self is ColumnDisplayType.PILL:
            return pill()
