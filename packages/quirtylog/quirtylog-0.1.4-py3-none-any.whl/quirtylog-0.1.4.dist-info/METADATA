Metadata-Version: 2.1
Name: quirtylog
Version: 0.1.4
Summary: Quick & dirty logging package
Author: agdiiura, 
Author-email: andreadiiura@gmail.com
License: MIT
Classifier: Programming Language :: Python :: 3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: coloredlogs >=10.0
Requires-Dist: joblib >=1.3.2
Requires-Dist: pandas >=2.1.4
Requires-Dist: PyYAML >=6.0.1
Requires-Dist: requests >=2.18.4
Requires-Dist: tqdm >=4.66.1
Requires-Dist: setuptools-git-versioning

![Alt text](logo.png?raw=true "Title")

# ⚡ quirtylog ⚡


[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)

Quick & dirty logging in python.


The file `requirements.txt` contains the packages needed for the installation.
The code requires `python3.11+`.

### Installation
To install the package the simplest procedure is:
```bash
pip install quirtylog
```
Now you can test the installation... In a python shell:

```python
import quirtylog

quirtylog.__version__
```

#### Installation from source
Once you have cloned the repository
```bash
pip install .
```
To use the develop mode just write `pip install -e .`.


### Examples
The package creates custom loggers object.

```python
import quirtylog

log_path = "/path/to/logs"
logger = quirtylog.create_logger(log_path=log_path)
```
It is also possible to create decorators to be
used in a user-defined function.

```python
import quirtylog


@quirtylog.measure_time(logger)
def f(x):
    """A function that do nothing"""
    return x


@quirtylog.measure_time(logger)
def g(x):
    """A function that raise an exception"""
    return x / 0.
```

For further examples see the folder [`examples`](examples).

### Contributing
If you want to contribute to this project, please follow the guidelines in the [CONTRIBUTING.md](CONTRIBUTING.md).

### Official soundtrack
[Jhonny Cash - The Frozen Logger](https://www.youtube.com/watch?v=KUfzDIKGkQI)
