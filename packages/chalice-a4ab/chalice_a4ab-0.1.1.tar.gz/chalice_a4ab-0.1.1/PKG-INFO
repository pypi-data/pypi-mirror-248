Metadata-Version: 2.1
Name: chalice-a4ab
Version: 0.1.1
Summary: Chalice x Agents for Amazon Bedrock plug-ins
Home-page: https://github.com/ShotaOki/ChaliceA4AB
License: MIT
Keywords: Chalice,AWS,Agents for Amazon Bedrock,Bedrock
Author: Shota Oki
Requires-Python: >=3.7,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: apispec (>=6.0.2,<7.0.0)
Requires-Dist: chalice-spec (>=0.7.0,<0.8.0)
Project-URL: Repository, https://github.com/ShotaOki/ChaliceA4AB
Description-Content-Type: text/markdown

# Chalice-A4AB

## What is this library?

Chalice plugin: Support `Agents for Amazon Bedrock`

## Usage

1. Install

```
pip install chalice-a4ab
```

2. Replace `from chalice import Chalice` to `from chalice_a4ab import Chalice`.

Before:

```python
from chalice import Chalice

app = Chalice("app-name")

@app.router("path-name")
...
```

After:

```python
from chalice_a4ab import Chalice

app = Chalice("app-name")

@app.router("path-name")
...
```

3. Application work on Agents for Amazon Bedrock

## Advanced Usage

Create OpenAPI Schema automatically.

1. Install Chalice-spec

```python
pip install chalice-spec chalice-a4ab
```

2. Write Setting

```python
from chalice_a4ab import Chalice, AgentsForAmazonBedrockConfig

# Set Config for Agents for Amazon bedrock
AgentsForAmazonBedrockConfig(
    title="title",
    instructions="Situation Settings for talking with Human and agent.(more than 40 words)",
    description="Description of application",
).apply()

app = Chalice("app-name")

@app.router("path-name")
...
```

documentation for `@app.router` sample: https://github.com/TestBoxLab/chalice-spec

3. Upload by bash

Create AWS Resource for Cloudformation

```python
chalice-a4ab init --profile ${PROFILE_NAME} --region ${REGION_NAME}
```

Or Update Already Exists AWS Resource

```python
chalice-a4ab sync --profile ${PROFILE_NAME} --region ${REGION_NAME}
```

Delete AWS Resource

```python
chalice-a4ab delete
```

