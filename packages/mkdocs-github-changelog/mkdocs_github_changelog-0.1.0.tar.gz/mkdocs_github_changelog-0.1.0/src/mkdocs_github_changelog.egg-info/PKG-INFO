Metadata-Version: 2.1
Name: mkdocs_github_changelog
Version: 0.1.0
Summary: mkdocs extension to autogenerate changelog from github
Author-email: David J Pugh <djpugh@gmail.com>
Maintainer-email: David J Pugh <djpugh@gmail.com>
Project-URL: repository, https://github.com/djpugh/mkdocs_github_changelog
Keywords: mkdocs,mkdocs-plugin,github,changelog,documentation
Classifier: Environment :: Console
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Natural Language :: English
Requires-Python: >3.7
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: ghapi
Requires-Dist: mkdocs>=1.4
Requires-Dist: importlib-metadata>=4.6; python_version < "3.10"
Requires-Dist: typing-extensions; python_version < "3.12"
Requires-Dist: backports.entry-points-selectable; python_version < "3.10"
Requires-Dist: importlib_metadata; python_version < "3.11"
Requires-Dist: python-dateutil; python_version < "3.11"
Provides-Extra: dev
Requires-Dist: setuptools_scm[toml]; extra == "dev"
Requires-Dist: importlib_metadata; python_version < "3.8" and extra == "dev"
Requires-Dist: nox; extra == "dev"
Provides-Extra: dev-lint
Requires-Dist: flake8>=5.0.4; extra == "dev-lint"
Requires-Dist: flake8-import-order>=0.18.2; extra == "dev-lint"
Requires-Dist: flake8-eradicate>=1.4.0; extra == "dev-lint"
Requires-Dist: flake8-docstrings>=0.2.7; extra == "dev-lint"
Requires-Dist: flake8-pyproject>=1.2.3; extra == "dev-lint"
Requires-Dist: flake8-bugbear>=22.0.0; extra == "dev-lint"
Requires-Dist: flake8-comprehensions>=3.12.0; extra == "dev-lint"
Requires-Dist: flake8-unused-arguments>=0.0.13; extra == "dev-lint"
Requires-Dist: flake8-noqa>=1.3.1; extra == "dev-lint"
Provides-Extra: dev-security
Requires-Dist: pipenv; extra == "dev-security"
Requires-Dist: bandit; extra == "dev-security"
Provides-Extra: dev-types
Requires-Dist: mypy; extra == "dev-types"
Requires-Dist: types-colorama; extra == "dev-types"
Requires-Dist: types-setuptools; extra == "dev-types"
Provides-Extra: dev-test
Requires-Dist: nskit; extra == "dev-test"
Requires-Dist: pytest>=7.3.1; extra == "dev-test"
Requires-Dist: pytest-cov>=4; extra == "dev-test"
Requires-Dist: pytest-subtests; extra == "dev-test"
Requires-Dist: pytest-xdist; extra == "dev-test"
Requires-Dist: mkdocs-material; extra == "dev-test"
Provides-Extra: dev-docs
Requires-Dist: mkdocs; extra == "dev-docs"
Requires-Dist: mkdocstrings[python]; extra == "dev-docs"
Requires-Dist: mkdocs-git-revision-date-localized-plugin; extra == "dev-docs"
Requires-Dist: mkdocs-material; extra == "dev-docs"
Requires-Dist: mkdocs-git-authors-plugin; extra == "dev-docs"
Requires-Dist: mkdocs-coverage; extra == "dev-docs"
Requires-Dist: mkdocs-include-markdown-plugin; extra == "dev-docs"
Requires-Dist: mike; extra == "dev-docs"
Provides-Extra: dev-build
Requires-Dist: build; extra == "dev-build"

# mkdocs_github_changelog


mkdocs extension to autogenerate changelog from github


## Introduction


## Contributing

To see the contribution guidelines, see [docs/source/developing/index.md](docs/source/developing/index.md).

## Setting up for development

Create a virtual environment.
Install the package using ``pip install -e .[dev]``


Then add code to the package as appropriate - submodules can be created under ``src/mkdocs_github_changelog``
Tests can be added to the tests folder



### CI

There are a set of CI checks:

* lint: ``nox -t lint``
* test: ``nox -t test``
* build: ``nox -t build``

specific subfolders can be passed to the test tag in nox: ``nox -t test -- <subfolder1> <subfolder2>``




## Versioning

It is important to track and version code, and to aid that with the python packages and models, ``setuptools_scm`` is used.
This links the version reported at ``__version__`` to the git tag (+ commit hash if appropriate), to reduce the amount of
places that need editing when changing versions.

For describing versions we are using semantic versioning ``<major>.<minor>.<patch>``. Increment the:

* ``<major>`` version when you make incompatible API changes,
* ``<minor>`` version when you add functionality in a backwards-compatible manner, and
* ``<patch>`` version when you make backwards-compatible bug fixes.

There are also codes for pre-releases and other descriptions (see https://semver.org/)

To create a version, use ``git tag <major>.<minor>.<patch>`` and then make sure to push that tag with ``git push origin <major>.<minor>.<patch>``,
or an equivalent tagging tool (e.g. Github releases).





------------

Repo created from nskit.recipes.python.package:PackageRecipe (version 0.0.post1.dev14+g7e85d99.d20231220) using ``nskit``.

