Metadata-Version: 2.1
Name: aio-retrying
Version: 1.0.1
Summary: new version async retrying package.
License: MIT
Author: Daoji
Author-email: daoji.chang@gmail.com
Requires-Python: >=3.8,<3.13
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: async-timeout (>=4.0.3,<5.0.0)
Description-Content-Type: text/x-rst

async_retrying
==============

:info: Simple retrying for asyncio

.. image:: https://img.shields.io/travis/wikibusiness/async_retrying.svg
    :target: https://travis-ci.org/wikibusiness/async_retrying

.. image:: https://img.shields.io/pypi/v/async_retrying.svg
    :target: https://pypi.python.org/pypi/async_retrying

Installation
------------

.. code-block:: shell

    pip install async_retrying

Usage
-----

.. code-block:: python

    import asyncio

    from async_retrying import retry

    counter = 0

    @retry
    @asyncio.coroutine
    def fn():
        global counter

        counter += 1

        if counter == 1:
            raise RuntimeError

    @asyncio.coroutine
    def main():
        yield from fn()

    loop = asyncio.get_event_loop()

    loop.run_until_complete(main())

    assert counter == 2

    loop.close()


Python 3.3+ is required

