"use strict";(globalThis["webpackChunkphotobooth_app_frontend"]=globalThis["webpackChunkphotobooth_app_frontend"]||[]).push([[275],{28275:(e,o,t)=>{t.r(o),t.d(o,{default:()=>z});var l=t(59835),r=t(86970);const n={class:"q-mt-md row justify-center"},a={class:"col-12 col-md-8 q-mb-xl"},s={class:"text-h5"},i={class:"col-12 col-md-8 q-mb-xl"},c={class:"q-gutter-sm"};function m(e,o,t,m,u,p){const g=(0,l.up)("q-tab"),d=(0,l.up)("q-tabs"),f=(0,l.up)("q-separator"),b=(0,l.up)("BlitzForm"),v=(0,l.up)("q-btn"),h=(0,l.up)("q-page-sticky"),y=(0,l.up)("q-page");return(0,l.wg)(),(0,l.j4)(y,{padding:""},{default:(0,l.w5)((()=>[(0,l.Wm)(d,{modelValue:m.selected_group,"onUpdate:modelValue":o[0]||(o[0]=e=>m.selected_group=e),class:"text-grey","active-color":"secondary","indicator-color":"secondary","mobile-arrows":"",align:"justify"},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(m.main_groups,(e=>((0,l.wg)(),(0,l.j4)(g,{key:e,label:e,name:e},null,8,["label","name"])))),128))])),_:1},8,["modelValue"]),(0,l.Wm)(f),(0,l._)("div",n,[(0,l._)("div",a,[(0,l._)("div",s,(0,r.zw)(m.group_title),1),(0,l._)("p",null,(0,r.zw)(m.group_description),1)]),(0,l._)("div",i,[m.renderBlitzForm?((0,l.wg)(),(0,l.j4)(b,{modelValue:m.serverConfig[m.selected_group],"onUpdate:modelValue":o[1]||(o[1]=e=>m.serverConfig[m.selected_group]=e),key:m.selected_group,schema:m.schema_blitzar,internalLabels:!1,"label-position":"left",class:"blitzar-form"},null,8,["modelValue","schema"])):(0,l.kq)("",!0)])]),(0,l.Wm)(h,{position:"bottom-right",offset:[25,25]},{default:(0,l.w5)((()=>[(0,l._)("div",c,[(0,l.Wm)(v,{label:"reset",onClick:o[2]||(o[2]=e=>m.remoteProcedureCall("/admin/config/reset"))}),(0,l.Wm)(v,{label:"restore",onClick:o[3]||(o[3]=e=>m.getConfig("current"))}),(0,l.Wm)(v,{color:"primary",label:"persist",onClick:o[4]||(o[4]=e=>m.uploadConfigAndPersist())})])])),_:1})])),_:1})}t(69665);var u=t(60499),p=t(91569),g=t(19302),d=t(96694),f=t(32395);const b={components:{BlitzForm:f.lU,BlitzListForm:f.$C},setup(){const e=(0,g.Z)(),o=(0,u.iH)({});let t={};const r=(0,u.iH)([]),n=(0,u.iH)(!1),a=(0,u.iH)(""),s=(0,d.R)(),i=(0,l.Fl)((()=>""!=a.value?t[a.value]["allOf"][0]["title"]:"-")),c=(0,l.Fl)((()=>""!=a.value?t[a.value]["allOf"][0]["description"]:"-")),m=(0,l.Fl)((()=>""!=a.value?f(t[a.value]):[])),f=e=>{const o=e=>e.replace(/[&<>'"]/g,(e=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"}[e]))),t=(e,t)=>{let l={id:e,label:t["title"],component:"QInput",filled:!0};return"boolean"==t["type"]&&(l["component"]="QToggle"),"integer"!=t["type"]&&"float"!=t["type"]||(l["component"]="QInput",t["ui_component"]&&(l["component"]=t["ui_component"]),l["type"]="number",l["labelAlways"]=!0,t["exclusiveMinimum"]&&(l["min"]=t["exclusiveMinimum"]),t["exclusiveMaximum"]&&(l["max"]=t["exclusiveMaximum"]),t["minimum"]&&(l["min"]=t["minimum"]),t["maximum"]&&(l["max"]=t["maximum"])),t["allOf"]&&Object.keys(t["allOf"][0]).includes("enum")&&(l["component"]="QSelect",l["options"]=t["allOf"][0]["enum"]),l["subLabel"]=`${t["description"]||""} (default=${o(("default"in t?t["default"]:"undefined").toString())})`,l};console.log("creating blitzar schema"),console.log(e);let l=[];return"allOf"in e?Object.entries(e["allOf"][0]["properties"]).forEach((e=>{const[o,r]=e;let n=t(o,r);"array"==r["type"]&&r["items"]&&"object"==r["items"]["type"]?(n["component"]="BlitzListForm",n["schema"]=[],Object.entries(r["items"]["properties"]).forEach((e=>{const[o,l]=e;n["schema"].push(t(o,l))}))):"array"==r["type"]&&r["items"]&&r["items"]["enum"]&&"string"==r["items"]["type"]&&(n["component"]="QSelect",n["multiple"]=!0,n["use-chips"]=!0,n["stack-label"]=!0,n["options"]=r["items"]["enum"]),l.push(n)})):console.log("error, wrong format!, no direct props on main level"),console.log(l),l},b=()=>{p.api.get("/admin/config/schema?schema_type=dereferenced").then((async e=>{console.log(e.data),t=e.data.properties,r.value=Object.keys(t),a.value=r.value[0]})).catch((o=>{console.log(o),console.log("error"),e.notify({message:"error getting scheme! check logs",color:"red"})}))},v=(t="current")=>{n.value=!1,p.api.get(`/admin/config/${t}`).then((async e=>{console.log(e.data),console.log(o.value),o.value=e.data,n.value=!0})).catch((o=>{console.log(o),console.log("error"),e.notify({message:"error getting config!",color:"red"})}))};b(),v("currentActive");const h=()=>{console.log("sync config to server"),console.log(o.value),p.api.post("/admin/config/current",o.value).then((o=>{s.initStore(!0),e.notify({message:"Config persisted and reloaded from server. If changed hardware settings, pls reload/restart services!",color:"green"})})).catch((o=>{if(o.response){let t="check following fields:<br/>";return Object.values(o.response.data.detail).forEach((e=>{t+=e["loc"].join(" -> "),t+=`: ${e["msg"]}`,t+="<br/>"})),void e.notify({caption:"validation error",icon:"error",html:!0,message:`${t}`,color:"red"})}o.request?console.error(o.request):console.error("Error",o.message),e.notify({message:"error saving config, check browser console and logs",color:"red"})}))};return(0,l.wF)((()=>console.log("Composition API beforemounted"))),(0,l.bv)((()=>console.log("Composition API mounted"))),{schema_blitzar:m,renderBlitzForm:n,main_groups:r,group_title:i,group_description:c,selected_group:a,serverConfig:o,remoteProcedureCall:p.remoteProcedureCall,getConfig:v,uploadConfigAndPersist:h}}};var v=t(11639),h=t(69885),y=t(47817),_=t(57661),w=t(50926),C=t(30627),k=t(68879),q=t(69984),x=t.n(q);const j=(0,v.Z)(b,[["render",m]]),z=j;x()(b,"components",{QPage:h.Z,QTabs:y.Z,QTab:_.Z,QSeparator:w.Z,QPageSticky:C.Z,QBtn:k.Z})}}]);