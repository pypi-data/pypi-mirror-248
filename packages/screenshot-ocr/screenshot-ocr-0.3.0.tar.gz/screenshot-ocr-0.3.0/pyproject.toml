[build-system]
requires = [
    "setuptools>=67.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "screenshot-ocr"
description = "Extract text from screenshots."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Environment :: Console",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
    "Intended Audience :: End Users/Desktop",
]
dynamic = [
    "version",
    "dependencies",
    "optional-dependencies",
]

[project.urls]
"Homepage" = "https://github.com/cofiem/screenshot-ocr"
"Changelog" = "https://github.com/cofiem/screenshot-ocr/blob/main/CHANGELOG.md"
"Source" = "https://github.com/cofiem/screenshot-ocr"
"Tracker" = "https://github.com/cofiem/screenshot-ocr/issues"

[project.scripts]
screenshot-ocr = 'screenshot_ocr.cli:main'

[tool.setuptools.packages.find]
where = [
    "src",
]
# include and exclude accept strings representing glob patterns.
include = [
    "screenshot_ocr*",
]

[tool.setuptools.dynamic]
version = { file = [
    "VERSION",
] }
dependencies = { file = [
    "requirements.txt",
] }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = [
    "requirements-dev.txt",
] }

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra --quiet"
pythonpath = [
    "src",
]
testpaths = [
    "tests",
]

[tool.coverage.run]
# "Specifying the source option enables coverage.py to report on unexecuted files,
# since it can search the source tree for files that havenâ€™t been measured at all."
source = [
    'src',
]
omit = [
    '*/site-packages/*',
    'tests/*',
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.html]
directory = "coverage-html"

[tool.isort]
profile = "black"
src_paths = [
    "src",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py38,py39,py310,py311,py312

[testenv]
#recreate = true
deps =
    -r requirements.txt
    -r requirements-dev.txt
allowlist_externals =
    echo
commands =
    echo "::group::Show app help"
    screenshot-ocr --version
    screenshot-ocr --help
    echo
    echo "::endgroup::"
    echo "::group::Tests with coverage"
    python -X dev -m coverage run -m pytest --doctest-modules
    echo "::endgroup::"
    echo "::group::Coverage report"
    -python -X dev -m coverage report
    echo "::endgroup::"
    echo "::group::Linter - mypy"
    -python -X dev -m mypy src
    echo "::endgroup::"
    echo "::group::Linter - black"
    -python -X dev -m black --check src
    echo "::endgroup::"
    echo "::group::Linter - ruff"
    -python -X dev -m ruff check src
    echo "::endgroup::"
    echo "::group::Linter - pylint"
    -python -X dev -m pylint src
    echo "::endgroup::"
    echo "::group::Build"
    python -m build --sdist --wheel --outdir build/dist-test/{env_name}/ .
    echo "::endgroup::"
"""

[tool.mypy]
#strict = true
ignore_missing_imports = true
check_untyped_defs = true
no_implicit_optional = true
enable_incomplete_feature = 'Unpack'

[tool.ruff]
line-length = 88
show-fixes = true
src = [
    "src",
]
exclude = [
    ".venv",
    "tests",
]
select = [
    "ALL"
]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ERA001", # commented-out-code
    "RET504", # Unnecessary variable assignment before `return` statement
    "TD002", # Missing author in TODO; try: `# TODO(<author_name>): ...`
    "TD003", # Missing issue link on the line following this TODO
    "TRY300", # Consider moving this statement to an `else` block; conflicts with "RET505 Unnecessary `else` after `return` statement"
]


[tool.ruff.pydocstyle]
convention = "google"
