# CLI Options
[cli]
emojis = false
offline = false

# Git Options
[git]
repository = "https://github.com/eli64s/readme-ai"

# Language Model API Settings
[llm]
endpoint = "https://api.openai.com/v1/chat/completions"
encoding = "cl100k_base"
model = "gpt-3.5-turbo"
rate_limit = 5
tokens = 669
tokens_max = 3999
temperature = 1.0

# Markdown Templates
[md]
align = "center"
image = ""
tables = ""
default = "‚ñ∫ INSERT-TEXT"
dropdown = """<details closed><summary>{}</summary>\n\n{}\n\n</details>\n"""

header = """<div align="{0}">
<h1><img src={1} width="150" />
<br>{2}</h1>
<h3>‚ó¶ {3}</h3>
<h3>‚ó¶ Developed with the software and tools below.</h3>
"""
header_left = """[<img src={0} height="120" align="left">]({0})
# {1}
### {2}\n
"""

badges_offline = """<p align="{0}">
{1}
</p>
</div>
<hr>
"""
badges_shieldsio = """<p align="{0}">
{1}
</p>
<img src="https://img.shields.io/github/license/{2}?style={3}&color=5D6D7E" alt="GitHub license" />
<img src="https://img.shields.io/github/last-commit/{2}?style={3}&color=5D6D7E" alt="git-last-commit" />
<img src="https://img.shields.io/github/commit-activity/m/{2}?style={3}&color=5D6D7E" alt="GitHub commit activity" />
<img src="https://img.shields.io/github/languages/top/{2}?style={3}&color=5D6D7E" alt="GitHub top language" />
</div>
<hr>
"""
badges_skills = """
<div align="{0}">
<h1><img src={1} width="150" />
<br>{2}</h1>
<h3>‚ó¶ {3}</h3>
<h3>‚ó¶ Developed with the software and tools below.</h3>
</div>
<p align="{4}">
<a href="https://skillicons.dev">
<img src="{5}">
</a>
</p>
<hr>
"""
badges_style="flat"

toc = """
## üìñ Table of Contents
- [üìñ Table of Contents](#-table-of-contents)
- [üìç Overview](#-overview)
- [‚öôÔ∏è Features](#-features)
- [üìÇ repository Structure](#-repository-structure)
- [üì¶ Modules](#modules)
- [üßë‚Äçüíª Getting Started](#-getting-started)
    - [‚ñ∫ Installation](#-installation)
    - [üöÄ Run {0}](#-run-{0})
    - [üß™ Tests](#-tests)
- [üõ£ Roadmap](#-roadmap)
- [ü§ù Contributing](#-contributing)
- [üìÑ License](#-license)
- [üëè Acknowledgments](#-acknowledgments)

---
"""

intro = """

## üìç Overview

{}

---

## ‚öôÔ∏è Features

{}

---
"""

tree = """

## üìÇ Repository Structure

```sh
{0}
```

---
"""

modules = """
\n## üì¶ Modules
"""
setup = """---

## üßë‚Äçüíª Getting Started

***Dependencies***

Ensure you have the following dependencies installed on your system:
`- ‚ÑπÔ∏è Dependency 1`
`- ‚ÑπÔ∏è Dependency 2`
`- ‚ÑπÔ∏è ...`

### ‚ñ∫ Installation

1. Clone the {0} repository:
```sh
git clone {1}
```

2. Change to the project directory:
```sh
cd {0}
```

3. Install the dependencies:
```sh
{2}
```

### üöÄ Run {0}
\n```sh\n{3}\n```

### üß™ Tests
```sh\n{4}\n```
\n---
"""

contribute = """
\n## üõ£ Project Roadmap

> - [X] `‚ÑπÔ∏è  Task 1: Implement X`
> - [ ] `‚ÑπÔ∏è  Task 2: Implement Y`
> - [ ] `‚ÑπÔ∏è ...`

\n---

## ü§ù Contributing

Contributions are welcome! Here are several ways you can contribute:

- **[Submit Pull Requests](https://github.com/{0}/blob/main/CONTRIBUTING.md)**: Review open PRs, and submit your own PRs.
- **[Join the Discussions](https://github.com/{0}/discussions)**: Share your insights, provide feedback, or ask questions.
- **[Report Issues](https://github.com/{0}/issues)**: Submit bugs found or log feature requests for {1}.

#### *Contributing Guidelines*

<details closed>
<summary>Click to expand</summary>

1. **Fork the Repository**: Start by forking the project repository to your GitHub account.
2. **Clone Locally**: Clone the forked repository to your local machine using a Git client.
   ```sh
   git clone <your-forked-repo-url>
   ```
3. **Create a New Branch**: Always work on a new branch, giving it a descriptive name.
   ```sh
   git checkout -b new-feature-x
   ```
4. **Make Your Changes**: Develop and test your changes locally.
5. **Commit Your Changes**: Commit with a clear and concise message describing your updates.
   ```sh
   git commit -m 'Implemented new feature x.'
   ```
6. **Push to GitHub**: Push the changes to your forked repository.
   ```sh
   git push origin new-feature-x
   ```
7. **Submit a Pull Request**: Create a PR against the original project repository. Clearly describe the changes and their motivations.

Once your PR is reviewed and approved, it will be merged into the main branch.

</details>

---

## üìÑ License


This project is protected under the [SELECT-A-LICENSE](https://choosealicense.com/licenses) License. For more details, refer to the [LICENSE](https://choosealicense.com/licenses/) file.

---

## üëè Acknowledgments

- List any resources, contributors, inspiration, etc. here.

[**RETURN**](#Top)

---

"""

# Paths
[paths]
dependency_files = "dependency_files.toml"
identifiers = "identifiers.toml"
ignore_files = "ignore_files.toml"
language_names = "language_names.toml"
language_setup = "language_setup.toml"
shieldsio_icons = "data/shieldsio.json"
skill_icons = "data/skill_icons.json"
output = "readme-ai.md"

# Prompts
[prompts]
features = """Hello! Analyze the repository {0} and following the instructions below
to generate a comprehensive list of features. Please provide a comprehensive technical
analysis of the codebase and its components. Consider the codebase as a whole and highlight
the key characteristics, design patterns, architectural decisions, and any other noteworthy
elements. Generate your response as a Markdown (.md) table that strictly adheres to the format:

|    | Feature            | Description                                                                                                        |
|----|--------------------|--------------------------------------------------------------------------------------------------------------------|
| ‚öôÔ∏è | **Architecture**   | Analyze the structural design of the system here. Limit your response to a maximum of 40 tokens.             |
| üìÑ | **Documentation**  | Discuss the quality and comprehensiveness of the documentation here. Limit your response to a maximum of 40 tokens.|
| üîó | **Dependencies**   | Examine the external libraries or other systems that this system relies on here. Limit your response to a maximum of 40 tokens.|
| üß© | **Modularity**     | Discuss the system's organization into smaller, interchangeable components here. Limit your response to a maximum of 40 tokens.|
| üß™ | **Testing**        | Evaluate the system's testing strategies and tools here. Limit your response to a maximum of 40 tokens.       |
| ‚ö°Ô∏è  | **Performance**    | Analyze how well the system performs, considering speed, efficiency, and resource usage here. Limit your response to a maximum of 40 tokens.|
| üîê | **Security**       | Assess the measures the system uses to protect data and maintain functionality here. Limit your response to a maximum of 40 tokens.|
| üîÄ | **Version Control**| Discuss the system's version control strategies and tools here. Limit your response to a maximum of 40 tokens.|
| üîå | **Integrations**   | Evaluate how the system interacts with other systems and services here. Limit your response to a maximum of 40 tokens.|
| üì∂ | **Scalability**    | Analyze the system's ability to handle growth here. Limit your response to a maximum of 40 tokens.           |

Code repository information:\n
\nDirectory tree structure: {1}
\nDependencies: {2}
\nCode summaries: {3}
\n
"""
overview = """Generate a summary, of 99 words or less, that describes the capabilities
of the code repository {0}. Focus on the project's use-case and value proposition,
rather than its technical details. Do not refer to the project using the URL provided.
Attached below are additional artifacts and metadata of the codebase and its components,
to supplement your analysis. Code repository information:\n
\nDirectory tree structure: {1}
\nPackages and dependencies: {2}
\nCode summaries: {3}
\n
"""
slogan = """Create a catchy and engaging slogan for the code repository - {0}.
Limit your response to 18 tokens. Do not refer to the project using the URL provided
or its repository name. An example slogan is: "A simple, fast, and reliable package manager."""
summaries = """Generate a comprehensive summary, 80 total tokens or less, that encapsulates the
core functionalities of the code provided below. Aim for precision and conciseness in your explanation,
ensuring a fine balance between detail and brevity. Code repository information:\n
\nDirectory tree structure: {0}
\nRelative path in relation to the repository root: {1}
\nFile contents: {2}
\n
"""
