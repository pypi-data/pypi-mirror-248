# CLI Options
[cli]
emojis = false
offline = false

# File Resources
[files]
dependency_files = "dependency_files.toml"
identifiers = "identifiers.toml"
ignore_files = "ignore_files.toml"
language_names = "language_names.toml"
language_setup = "language_setup.toml"
output = "readme-ai.md"
shieldsio_icons = "data/shieldsio.json"
skill_icons = "data/skill_icons.json"

# Git Options
[git]
repository = "https://github.com/eli64s/readme-ai"

# Language Model API Settings
[llm]
endpoint = "https://api.openai.com/v1/chat/completions"
encoding = "cl100k_base"
model = "gpt-3.5-turbo"
rate_limit = 5
temperature = 1.0
tokens = 699
tokens_max = 3999

# Markdown Templates
[md]
align = "center"
default = "<code>► INSERT-TEXT-HERE</code>"
dropdown = """<details closed><summary>{0}</summary>\n\n{1}\n\n</details>\n"""
image = ""
tables = ""

header = """\
<div id="top" align="{0}">
   <h1>
      <img src="{1}" width="100">
      <br>
      {2}
   </h1>
   <h3>◦ {3}</h3>
   <h3>◦ Developed with the software and tools below.</h3>
"""
header_left = """[<img src={0} height="120" align="left">]({0})
# {1}
### {2}\n
"""

badges_offline = """\
   <p align="{0}">
      {1}
   </p>
</div>
<hr>
"""
badges_shieldsio = """\
   <p align="{0}">
      {1}
   </p>
   <img src="https://img.shields.io/github/license/{2}?style={3}&color=5D6D7E" alt="github-license">
   <img src="https://img.shields.io/github/last-commit/{2}?style={3}&color=5D6D7E" alt="github-last-commit">
   <img src="https://img.shields.io/github/commit-activity/m/{2}?style={3}&color=5D6D7E" alt="github-commit-activity">
   <img src="https://img.shields.io/github/languages/top/{2}?style={3}&color=5D6D7E" alt="github-top-language">
</div>

---
"""
badges_skills = """\
<div align="{0}">
   <h1><img src="{1}" width="100">
      <br>
      {2}
   </h1>
   <h3>◦ {3}</h3>
   <h3>◦ Developed with the software and tools below.</h3>
</div>
<p align="{4}">
   <a href="https://skillicons.dev">
      <img src="{5}">
   </a>
</p>

---
"""
badges_style = "flat"

toc = """
## 🔗 Quick Links
- [🔗 Quick Links](#-quick-links)
- [📍 Overview](#-overview)
- [📦 Features](#-features)
- [📂 Repository Structure](#-repository-structure)
- [🧩 Modules](#modules)
- [🚀 Getting Started](#-getting-started)
    - [⚙️ Installation](#-installation)
    - [🤖 Running {0}](#-running-{0})
    - [🧪 Tests](#-tests)
- [🚧 Roadmap](#-roadmap)
- [🤝 Contributing](#-contributing)
- [📄 License](#-license)
- [👏 Acknowledgments](#-acknowledgments)

---
"""

intro = """

## 📍 Overview

{}

---

## 📦 Features

{}

---
"""

tree = """

## 📂 Repository Structure

```sh
{0}
```

---
"""

modules = """
\n## 🧩 Modules
"""
setup = """---

## 🚀 Getting Started

***Prerequisites***

Ensure you have the following dependencies installed on your system:

- `► INSERT-DEPENDENCY-1`
- `► INSERT-DEPENDENCY-2`
- `► ...`

### ⚙️ Installation

1. Clone the {0} repository:
```sh
git clone {1}
```

2. Change to the project directory:
```sh
cd {0}
```

3. Install the dependencies:
```sh
{2}
```

### 🤖 Running {0}
\n```sh\n{3}\n```

### 🧪 Tests
```sh\n{4}\n```
\n---
"""

contribute = """
\n## 🚧 Project Roadmap

- [X] `► INSERT-TASK-1`
- [ ] `► INSERT-TASK-2`
- [ ] `► ...`

---

## 🤝 Contributing

Contributions are welcome! Here are several ways you can contribute:

- **[Submit Pull Requests](https://github.com/{0}/blob/main/CONTRIBUTING.md)**: Review open PRs, and submit your own PRs.
- **[Join the Discussions](https://github.com/{0}/discussions)**: Share your insights, provide feedback, or ask questions.
- **[Report Issues](https://github.com/{0}/issues)**: Submit bugs found or log feature requests for {1}.

#### *Contributing Guidelines*

<details closed>
<summary>Click to expand</summary>

1. **Fork the Repository**: Start by forking the project repository to your GitHub account.
2. **Clone Locally**: Clone the forked repository to your local machine using a Git client.
   ```sh
   git clone <your-forked-repo-url>
   ```
3. **Create a New Branch**: Always work on a new branch, giving it a descriptive name.
   ```sh
   git checkout -b new-feature-x
   ```
4. **Make Your Changes**: Develop and test your changes locally.
5. **Commit Your Changes**: Commit with a clear and concise message describing your updates.
   ```sh
   git commit -m 'Implemented new feature x.'
   ```
6. **Push to GitHub**: Push the changes to your forked repository.
   ```sh
   git push origin new-feature-x
   ```
7. **Submit a Pull Request**: Create a PR against the original project repository. Clearly describe the changes and their motivations.

Once your PR is reviewed and approved, it will be merged into the main branch.

</details>

---

## 📄 License


This project is protected under the [SELECT-A-LICENSE](https://choosealicense.com/licenses) License. For more details, refer to the [LICENSE](https://choosealicense.com/licenses/) file.

---

## 👏 Acknowledgments

- List any resources, contributors, inspiration, etc. here.

[**Return**](#-quick-links)

---
"""

# Language Model Prompts
[prompts]
features = """Hello! Analyze the repository '{0}' and provide an in-depth technical analysis of its codebase and components.
Your response should be formatted as a Markdown table using the structure below:

Markdown Template:

|      | Feature             | Description                                                                                                           |
| ---  | ------------------- | --------------------------------------------------------------------------------------------------------------------- |
| ⚙️    | **Architecture**    | Examine and detail the repository's structural design, focusing on layout, framework, and key architectural elements. |
| 📄   | **Documentation**   | Assess the quality, clarity, and completeness of the documentation, highlighting its user-friendliness and detail.    |
| 🔗   | **Dependencies**    | Identify and comment on external libraries and systems the repository relies on, noting their integration and use.    |
| 🧩   | **Modularity**      | Evaluate the repository's division into modules and components, discussing its approach to modular design.            |
| 🧪   | **Testing**         | Analyze the testing practices, including methodologies and tools, emphasizing their effectiveness and coverage.       |
| ⚡️    | **Performance**     | Discuss the repository's performance, focusing on speed, efficiency, and resource management.                         |
| 🔐   | **Security**        | Review the security measures implemented for data protection and operational integrity.                               |
| 🔀   | **Version Control** | Describe the version control system in use, noting its strategy and how it contributes to development.                |
| 🔌   | **Integrations**    | Examine the repository's interactions with other systems or services, and its integration capabilities.               |
| 📶   | **Scalability**     | Assess the repository's ability to handle growth, focusing on scalability in terms of user and repository numbers.    |

Each description should adhere to a 40-token limit, ensuring concise yet informative analysis. Tokens include words, punctuation, or symbols.

For guidance, use the following repository information:

- Repository directory tree structure: {1}
- Codebase dependencies and software: {2}
- Codebase file summaries: {3}

Please provide detailed insights while respecting the token limit. Thank you for your comprehensive analysis!
"""
overview = """Please analyze the codebase located at {0} and provide a robust, yet succinct overview of the project. \
Provided are summaries of key code file in the repository:\n{3}\n
Craft a 3-4 sentence paragraph that encapsulate the core functionalities of the project, its purpose and value proposition. \
Avoid technical jargon and focus on the project's use-case and benefits.
"""
slogan = """Devise an attention-grabbing and memorable slogan for the code repository {0}. \
Keep the slogan within 15 tokens and avoid using the project's URL or repository name. \
For instance, consider the example: "A simple, fast, and reliable package manager.
"""
summaries = """Deliver a succinct summary in no more than 50 tokens, emphasizing the main role \
and critical features of this code snippet in relation to its parent repository's architecture. \
Focus on what the code achieves, steering clear of technical implementation details. Included are \
supplementary details and materials about the codebase and its elements to enhance your understanding. \
Provided information includes:\n
- Repository layout and directory structure: {0}
- List of dependencies and software used in the codebase: {1}
- Summaries of key files within the codebase: {2}
"""
